{"version":3,"sources":["../../../../src/features/textarea/components/TextareaEditorComponent.js"],"names":["Component","EditableComponent","TextareaEditorComponent","props","context","_modeling","injector","get","_viewer","editLiteralExpressionText","bind","onElementsChanged","getLiteralExpression","id","changeSupport","getDecision","decisionLogic","forceUpdate","text","Editor","getClassName","getEditor"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA,SAASA,SAAT,QAA0B,SAA1B;AAEA,OAAOC,iBAAP,MAA8B,gDAA9B;;IAGqBC,uB;;;;;AACnB,mCAAYC,KAAZ,EAAmBC,OAAnB,EAA4B;AAAA;;AAAA;;AAC1B,8BAAMD,KAAN,EAAaC,OAAb;AAEA,UAAKC,SAAL,GAAiBD,OAAO,CAACE,QAAR,CAAiBC,GAAjB,CAAqB,UAArB,CAAjB;AAEA,UAAKC,OAAL,GAAeJ,OAAO,CAACE,QAAR,CAAiBC,GAAjB,CAAqB,QAArB,CAAf;AAEA,UAAKE,yBAAL,GAAiC,MAAKA,yBAAL,CAA+BC,IAA/B,+BAAjC;AACA,UAAKC,iBAAL,GAAyB,MAAKA,iBAAL,CAAuBD,IAAvB,+BAAzB,CAR0B,CAU1B;;AACA,gCAAe,MAAKE,oBAAL,EAAf;AAAA,QAAQC,EAAR,yBAAQA,EAAR;;AAEAT,IAAAA,OAAO,CAACU,aAAR,CAAsBH,iBAAtB,CAAwCE,EAAxC,EAA4C,MAAKF,iBAAjD;AAb0B;AAc3B;;;;WAED,gCAAuB;AACrB,aAAO,KAAKH,OAAL,CAAaO,WAAb,GAA2BC,aAAlC;AACD;;;WAED,6BAAoB;AAClB,WAAKC,WAAL;AACD;;;WAED,mCAA0BC,IAA1B,EAAgC;AAC9B,WAAKb,SAAL,CAAeI,yBAAf,CAAyCS,IAAzC;AACD;;;WAED,kBAAS;AAEP;AACA,mCAAiB,KAAKN,oBAAL,EAAjB;AAAA,UAAQM,IAAR,0BAAQA,IAAR;;AAEA;AAAA,qBAEc,iBAFd;AAAA,iBAGYA,IAHZ;AAAA,oBAIe,KAAKT;AAJpB;AAMD;;;;EAxCkDT,S;;SAAhCE,uB;;IA2CfiB,M;;;;;;;;;;;;;WAEJ,kBAAS;AAEP,mCACmB,KAAKC,YAAL,EADnB,EAEM,KAAKC,SAAL,EAFN;AAKD;;;;EATkBpB,iB","sourcesContent":["import { Component } from 'inferno';\r\n\r\nimport EditableComponent from 'dmn-js-shared/lib/components/EditableComponent';\r\n\r\n\r\nexport default class TextareaEditorComponent extends Component {\r\n  constructor(props, context) {\r\n    super(props, context);\r\n\r\n    this._modeling = context.injector.get('modeling');\r\n\r\n    this._viewer = context.injector.get('viewer');\r\n\r\n    this.editLiteralExpressionText = this.editLiteralExpressionText.bind(this);\r\n    this.onElementsChanged = this.onElementsChanged.bind(this);\r\n\r\n    // there is only one single element\r\n    const { id } = this.getLiteralExpression();\r\n\r\n    context.changeSupport.onElementsChanged(id, this.onElementsChanged);\r\n  }\r\n\r\n  getLiteralExpression() {\r\n    return this._viewer.getDecision().decisionLogic;\r\n  }\r\n\r\n  onElementsChanged() {\r\n    this.forceUpdate();\r\n  }\r\n\r\n  editLiteralExpressionText(text) {\r\n    this._modeling.editLiteralExpressionText(text);\r\n  }\r\n\r\n  render() {\r\n\r\n    // there is only one single element\r\n    const { text } = this.getLiteralExpression();\r\n\r\n    return (\r\n      <Editor\r\n        className=\"textarea editor\"\r\n        value={ text }\r\n        onChange={ this.editLiteralExpressionText } />\r\n    );\r\n  }\r\n}\r\n\r\nclass Editor extends EditableComponent {\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div className={ this.getClassName() }>\r\n        { this.getEditor() }\r\n      </div>\r\n    );\r\n  }\r\n\r\n}"],"file":"TextareaEditorComponent.js"}