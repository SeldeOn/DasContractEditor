{"version":3,"sources":["../../../src/features/modeling/Modeling.js"],"names":["forEach","UpdatePropertiesHandler","Modeling","commandStack","viewer","eventBus","_commandStack","_viewer","_eventBus","on","registerHandlers","getHandlers","_getHandlers","getDecision","name","decision","context","element","properties","execute","id","text","literalExpression","decisionLogic","expressionLanguage","variable","typeRef","$inject","handlers","handler","registerHandler"],"mappings":"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","sourcesContent":["import {\r\n  forEach\r\n} from 'min-dash';\r\n\r\nimport UpdatePropertiesHandler\r\n  from 'dmn-js-shared/lib/features/modeling/cmd/UpdatePropertiesHandler';\r\n\r\n\r\nexport default class Modeling {\r\n\r\n  constructor(commandStack, viewer, eventBus) {\r\n    this._commandStack = commandStack;\r\n    this._viewer = viewer;\r\n    this._eventBus = eventBus;\r\n\r\n    eventBus.on('viewer.init', () => {\r\n\r\n      // register modeling handlers\r\n      registerHandlers(this.getHandlers(), commandStack);\r\n    });\r\n  }\r\n\r\n  getHandlers() {\r\n    return Modeling._getHandlers();\r\n  }\r\n\r\n  static _getHandlers() {\r\n    return {\r\n      'element.updateProperties': UpdatePropertiesHandler\r\n    };\r\n  }\r\n\r\n  getDecision() {\r\n    return this._viewer.getDecision();\r\n  }\r\n\r\n  editDecisionName(name) {\r\n    const decision = this.getDecision();\r\n\r\n    const context = {\r\n      element: decision,\r\n      properties: {\r\n        name\r\n      }\r\n    };\r\n\r\n    this._commandStack.execute('element.updateProperties', context);\r\n  }\r\n\r\n  editDecisionId(id) {\r\n    const decision = this.getDecision();\r\n\r\n    const context = {\r\n      element: decision,\r\n      properties: {\r\n        id\r\n      }\r\n    };\r\n\r\n    this._commandStack.execute('element.updateProperties', context);\r\n  }\r\n\r\n  editLiteralExpressionText(text) {\r\n    const decision = this.getDecision(),\r\n          literalExpression = decision.decisionLogic;\r\n\r\n    const context = {\r\n      element: literalExpression,\r\n      properties: {\r\n        text\r\n      }\r\n    };\r\n\r\n    this._commandStack.execute('element.updateProperties', context);\r\n  }\r\n\r\n  editExpressionLanguage(expressionLanguage) {\r\n    const decision = this.getDecision(),\r\n          literalExpression = decision.decisionLogic;\r\n\r\n    const context = {\r\n      element: literalExpression,\r\n      properties: {\r\n        expressionLanguage\r\n      }\r\n    };\r\n\r\n    this._commandStack.execute('element.updateProperties', context);\r\n  }\r\n\r\n  editVariableName(name) {\r\n    const decision = this.getDecision(),\r\n          variable = decision.variable;\r\n\r\n    const context = {\r\n      element: variable,\r\n      properties: {\r\n        name\r\n      }\r\n    };\r\n\r\n    this._commandStack.execute('element.updateProperties', context);\r\n  }\r\n\r\n  editVariableType(typeRef) {\r\n    const decision = this.getDecision(),\r\n          variable = decision.variable;\r\n\r\n    const context = {\r\n      element: variable,\r\n      properties: {\r\n        typeRef\r\n      }\r\n    };\r\n\r\n    this._commandStack.execute('element.updateProperties', context);\r\n  }\r\n}\r\n\r\nModeling.$inject = [ 'commandStack', 'viewer', 'eventBus' ];\r\n\r\n\r\n// helpers //////////////////////\r\n\r\n/**\r\n * Register handlers with the command stack\r\n *\r\n * @param {Object} handlers { id -> Handler } map\r\n * @param {CommandStack} commandStack\r\n */\r\nfunction registerHandlers(handlers, commandStack) {\r\n  forEach(handlers, function(handler, id) {\r\n    commandStack.registerHandler(id, handler);\r\n  });\r\n}"],"file":"Modeling.js"}