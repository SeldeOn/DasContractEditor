{"version":3,"sources":["../../src/import/TableTreeWalker.js"],"names":["forEach","elementToString","TableTreeWalker","handler","options","visit","element","ctx","definitions","gfx","Error","visitTable","table","handleDecision","decision","id","decisionLogic","output","input","handleClauses","handleRules","rule","clauses","context","e","rules","handleEntry","inputEntry","outputEntry","entry"],"mappings":"AAAA,SAASA,OAAT,QAAwB,UAAxB;AAEA,SAASC,eAAT,QAAgC,QAAhC;AAEA,eAAe,SAASC,eAAT,CAAyBC,OAAzB,EAAkCC,OAAlC,EAA2C;AAExD,WAASC,KAAT,CAAeC,OAAf,EAAwBC,GAAxB,EAA6BC,WAA7B,EAA0C;AAExC,QAAIC,GAAG,GAAGH,OAAO,CAACG,GAAlB,CAFwC,CAIxC;;AACA,QAAIA,GAAJ,EAAS;AACP,YAAM,IAAIC,KAAJ,4BAA+BT,eAAe,CAACK,OAAD,CAA9C,EAAN;AACD,KAPuC,CASxC;;;AACA,WAAOH,OAAO,CAACG,OAAR,CAAgBA,OAAhB,EAAyBC,GAAzB,EAA8BC,WAA9B,CAAP;AACD;;AAED,WAASG,UAAT,CAAoBL,OAApB,EAA6B;AAC3B,WAAOH,OAAO,CAACS,KAAR,CAAcN,OAAd,CAAP;AACD,GAjBuD,CAoBxD;;;AAEA,WAASO,cAAT,CAAwBC,QAAxB,EAAkC;AAEhC,QAAI,CAACA,QAAQ,CAACC,EAAd,EAAkB;AAChBD,MAAAA,QAAQ,CAACC,EAAT,GAAc,UAAd;AACD;;AAED,QAAMH,KAAK,GAAGE,QAAQ,CAACE,aAAvB;;AAEA,QAAIJ,KAAJ,EAAW;AAET,UAAI,CAACA,KAAK,CAACK,MAAX,EAAmB;AACjB,cAAM,IAAIP,KAAJ,8BAAiCT,eAAe,CAACW,KAAD,CAAhD,EAAN;AACD;;AAED,UAAML,GAAG,GAAGI,UAAU,CAACC,KAAD,CAAtB;;AAEA,UAAIA,KAAK,CAACM,KAAV,EAAiB;AACfC,QAAAA,aAAa,CAACP,KAAK,CAACM,KAAP,EAAcX,GAAd,EAAmBK,KAAnB,CAAb;AACD;;AAEDO,MAAAA,aAAa,CAACP,KAAK,CAACK,MAAP,EAAeV,GAAf,EAAoBK,KAApB,CAAb,CAZS,CAcT;AACA;;AACAQ,MAAAA,WAAW,CAACR,KAAK,CAACS,IAAP,EAAad,GAAb,EAAkBK,KAAlB,CAAX;AACD,KAjBD,MAiBO;AACL,YAAM,IAAIF,KAAJ,wBAA2BT,eAAe,CAACa,QAAD,CAA1C,EAAN;AACD;AAEF;;AAED,WAASK,aAAT,CAAuBG,OAAvB,EAAgCC,OAAhC,EAAyCf,WAAzC,EAAsD;AACpDR,IAAAA,OAAO,CAACsB,OAAD,EAAU,UAASE,CAAT,EAAY;AAC3BnB,MAAAA,KAAK,CAACmB,CAAD,EAAID,OAAJ,EAAaf,WAAb,CAAL;AACD,KAFM,CAAP;AAGD;;AAED,WAASY,WAAT,CAAqBK,KAArB,EAA4BF,OAA5B,EAAqCf,WAArC,EAAkD;AAChDR,IAAAA,OAAO,CAACyB,KAAD,EAAQ,UAASD,CAAT,EAAY;AACzBnB,MAAAA,KAAK,CAACmB,CAAD,EAAID,OAAJ,EAAaf,WAAb,CAAL;AAEAkB,MAAAA,WAAW,CAACF,CAAC,CAACG,UAAH,EAAeH,CAAf,CAAX;AAEAE,MAAAA,WAAW,CAACF,CAAC,CAACI,WAAH,EAAgBJ,CAAhB,CAAX;AACD,KANM,CAAP;AAOD;;AAED,WAASE,WAAT,CAAqBG,KAArB,EAA4BN,OAA5B,EAAqCf,WAArC,EAAkD;AAChDR,IAAAA,OAAO,CAAC6B,KAAD,EAAQ,UAASL,CAAT,EAAY;AACzBnB,MAAAA,KAAK,CAACmB,CAAD,EAAID,OAAJ,EAAaf,WAAb,CAAL;AACD,KAFM,CAAP;AAGD,GAzEuD,CA4ExD;;;AAEA,SAAO;AACLK,IAAAA,cAAc,EAAEA;AADX,GAAP;AAGD","sourcesContent":["import { forEach } from 'min-dash';\n\nimport { elementToString } from './Util';\n\nexport default function TableTreeWalker(handler, options) {\n\n  function visit(element, ctx, definitions) {\n\n    var gfx = element.gfx;\n\n    // avoid multiple rendering of elements\n    if (gfx) {\n      throw new Error(`already rendered ${ elementToString(element) }`);\n    }\n\n    // call handler\n    return handler.element(element, ctx, definitions);\n  }\n\n  function visitTable(element) {\n    return handler.table(element);\n  }\n\n\n  // Semantic handling //////////////////////\n\n  function handleDecision(decision) {\n\n    if (!decision.id) {\n      decision.id = 'decision';\n    }\n\n    const table = decision.decisionLogic;\n\n    if (table) {\n\n      if (!table.output) {\n        throw new Error(`missing output for ${ elementToString(table) }`);\n      }\n\n      const ctx = visitTable(table);\n\n      if (table.input) {\n        handleClauses(table.input, ctx, table);\n      }\n\n      handleClauses(table.output, ctx, table);\n\n      // if any input or output clauses (columns) were added\n      // make sure that for each rule the according input/output entry is created\n      handleRules(table.rule, ctx, table);\n    } else {\n      throw new Error(`no table for ${ elementToString(decision) }`);\n    }\n\n  }\n\n  function handleClauses(clauses, context, definitions) {\n    forEach(clauses, function(e) {\n      visit(e, context, definitions);\n    });\n  }\n\n  function handleRules(rules, context, definitions) {\n    forEach(rules, function(e) {\n      visit(e, context, definitions);\n\n      handleEntry(e.inputEntry, e);\n\n      handleEntry(e.outputEntry, e);\n    });\n  }\n\n  function handleEntry(entry, context, definitions) {\n    forEach(entry, function(e) {\n      visit(e, context, definitions);\n    });\n  }\n\n\n  // API //////////////////////\n\n  return {\n    handleDecision: handleDecision\n  };\n}\n"],"file":"TableTreeWalker.js"}