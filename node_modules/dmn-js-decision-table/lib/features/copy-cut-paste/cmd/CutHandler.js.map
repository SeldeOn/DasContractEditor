{"version":3,"sources":["../../../../src/features/copy-cut-paste/cmd/CutHandler.js"],"names":["Row","Col","CutHandler","clipboard","modeling","sheet","_clipboard","_modeling","_sheet","context","data","oldData","get","set","getRoot","elements","forEach","element","removeRow","removeCol","$inject"],"mappings":";;;;;;AAAA,SAASA,GAAT,EAAcC,GAAd,QAAyB,oBAAzB;AAEA;AACA;AACA;AACA;;IACqBC,U;AAEnB,sBAAYC,SAAZ,EAAuBC,QAAvB,EAAiCC,KAAjC,EAAwC;AAAA;;AACtC,SAAKC,UAAL,GAAkBH,SAAlB;AACA,SAAKI,SAAL,GAAiBH,QAAjB;AACA,SAAKI,MAAL,GAAcH,KAAd;AACD;AAGD;AACF;AACA;;;;;WACE,iBAAQI,OAAR,EAAiB;AACf,UACEC,IADF,GAEID,OAFJ,CACEC,IADF;AAIAD,MAAAA,OAAO,CAACE,OAAR,GAAkB,KAAKL,UAAL,CAAgBM,GAAhB,EAAlB;;AAEA,WAAKN,UAAL,CAAgBO,GAAhB,CAAoBH,IAApB;;AAEA,aAAO,KAAKF,MAAL,CAAYM,OAAZ,EAAP;AACD;;;WAED,qBAAYL,OAAZ,EAAqB;AAAA;;AACnB,UACEM,QADF,GAEIN,OAFJ,CACEM,QADF;AAIAA,MAAAA,QAAQ,CAACC,OAAT,CAAiB,UAAAC,OAAO,EAAI;AAC1B,YAAIA,OAAO,YAAYjB,GAAvB,EAA4B;AAC1B,UAAA,KAAI,CAACO,SAAL,CAAeW,SAAf,CAAyBD,OAAzB;AACD,SAFD,MAEO,IAAIA,OAAO,YAAYhB,GAAvB,EAA4B;AACjC,UAAA,KAAI,CAACM,SAAL,CAAeY,SAAf,CAAyBF,OAAzB;AACD;AACF,OAND;AAOD;AAED;AACF;AACA;;;;WACE,gBAAOR,OAAP,EAAgB;AAEd,UACEE,OADF,GAEIF,OAFJ,CACEE,OADF;;AAIA,WAAKL,UAAL,CAAgBO,GAAhB,CAAoBF,OAApB;;AAEA,aAAO,KAAKH,MAAL,CAAYM,OAAZ,EAAP;AACD;;;;;;SAlDkBZ,U;AAsDrBA,UAAU,CAACkB,OAAX,GAAqB,CAAE,WAAF,EAAe,UAAf,EAA2B,OAA3B,CAArB","sourcesContent":["import { Row, Col } from 'table-js/lib/model';\r\n\r\n/**\r\n * A handler that implements cutting a row or col.\r\n * Cutting of cells doesn't make sense.\r\n */\r\nexport default class CutHandler {\r\n\r\n  constructor(clipboard, modeling, sheet) {\r\n    this._clipboard = clipboard;\r\n    this._modeling = modeling;\r\n    this._sheet = sheet;\r\n  }\r\n\r\n\r\n  /**\r\n   * <do>\r\n   */\r\n  execute(context) {\r\n    let {\r\n      data\r\n    } = context;\r\n\r\n    context.oldData = this._clipboard.get();\r\n\r\n    this._clipboard.set(data);\r\n\r\n    return this._sheet.getRoot();\r\n  }\r\n\r\n  postExecute(context) {\r\n    let {\r\n      elements\r\n    } = context;\r\n\r\n    elements.forEach(element => {\r\n      if (element instanceof Row) {\r\n        this._modeling.removeRow(element);\r\n      } else if (element instanceof Col) {\r\n        this._modeling.removeCol(element);\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * <undo>\r\n   */\r\n  revert(context) {\r\n\r\n    const {\r\n      oldData\r\n    } = context;\r\n\r\n    this._clipboard.set(oldData);\r\n\r\n    return this._sheet.getRoot();\r\n  }\r\n\r\n}\r\n\r\nCutHandler.$inject = [ 'clipboard', 'modeling', 'sheet' ];"],"file":"CutHandler.js"}