{"version":3,"sources":["../../../../src/features/decision-table-head/editor/InputEditingProvider.js"],"names":["closest","domClosest","InputCell","InputCellContextMenu","InputCellProvider","components","contextMenu","eventBus","renderer","onGetComponent","cellType","context","contextMenuType","on","event","input","target","node","getBoundingClientRect","left","top","open","x","y","align","$inject"],"mappings":";;;;;;AAAA,SACEA,OAAO,IAAIC,UADb,QAEO,SAFP;AAIA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,oBAAP,MAAiC,mCAAjC;;IAGqBC,iB,6BAEnB,2BAAYC,UAAZ,EAAwBC,WAAxB,EAAqCC,QAArC,EAA+CC,QAA/C,EAAyD;AAAA;;AAEvDH,EAAAA,UAAU,CAACI,cAAX,CAA0B,MAA1B,EAAkC,gBAAkB;AAAA,QAAfC,QAAe,QAAfA,QAAe;;AAClD,QAAIA,QAAQ,KAAK,cAAjB,EAAiC;AAC/B,aAAOR,SAAP;AACD;AACF,GAJD;AAMAG,EAAAA,UAAU,CAACI,cAAX,CAA0B,cAA1B,EAA0C,YAAkB;AAAA,QAAjBE,OAAiB,uEAAP,EAAO;;AAC1D,QACEA,OAAO,CAACC,eAAR,KAA4B,YAD9B,EAEE;AACA,aAAOT,oBAAP;AACD;AACF,GAND;AAQAI,EAAAA,QAAQ,CAACM,EAAT,CAAY,YAAZ,EAA0B,iBAAsB;AAAA,QAAnBC,KAAmB,SAAnBA,KAAmB;AAAA,QAAZC,KAAY,SAAZA,KAAY;AAC9C,QAAQC,MAAR,GAAmBF,KAAnB,CAAQE,MAAR;AAEA,QAAMC,IAAI,GAAGhB,UAAU,CAACe,MAAD,EAAS,IAAT,EAAe,IAAf,CAAvB;;AAEA,gCAAsBC,IAAI,CAACC,qBAAL,EAAtB;AAAA,QAAQC,IAAR,yBAAQA,IAAR;AAAA,QAAcC,GAAd,yBAAcA,GAAd;;AAEAd,IAAAA,WAAW,CAACe,IAAZ,CAAiB;AACfC,MAAAA,CAAC,EAAEH,IADY;AAEfI,MAAAA,CAAC,EAAEH,GAFY;AAGfI,MAAAA,KAAK,EAAE;AAHQ,KAAjB,EAIG;AACDZ,MAAAA,eAAe,EAAE,YADhB;AAEDG,MAAAA,KAAK,EAALA;AAFC,KAJH;AAQD,GAfD;AAgBD,C;;SAlCkBX,iB;AAsCrBA,iBAAiB,CAACqB,OAAlB,GAA4B,CAC1B,YAD0B,EAE1B,aAF0B,EAG1B,UAH0B,EAI1B,UAJ0B,CAA5B","sourcesContent":["import {\n  closest as domClosest\n} from 'min-dom';\n\nimport InputCell from './components/InputCell';\nimport InputCellContextMenu from './components/InputCellContextMenu';\n\n\nexport default class InputCellProvider {\n\n  constructor(components, contextMenu, eventBus, renderer) {\n\n    components.onGetComponent('cell', ({ cellType }) => {\n      if (cellType === 'input-header') {\n        return InputCell;\n      }\n    });\n\n    components.onGetComponent('context-menu', (context = {}) => {\n      if (\n        context.contextMenuType === 'input-edit'\n      ) {\n        return InputCellContextMenu;\n      }\n    });\n\n    eventBus.on('input.edit', ({ event, input }) => {\n      const { target } = event;\n\n      const node = domClosest(target, 'th', true);\n\n      const { left, top } = node.getBoundingClientRect();\n\n      contextMenu.open({\n        x: left,\n        y: top,\n        align: 'bottom-right'\n      }, {\n        contextMenuType: 'input-edit',\n        input\n      });\n    });\n  }\n\n}\n\nInputCellProvider.$inject = [\n  'components',\n  'contextMenu',\n  'eventBus',\n  'renderer'\n];"],"file":"InputEditingProvider.js"}