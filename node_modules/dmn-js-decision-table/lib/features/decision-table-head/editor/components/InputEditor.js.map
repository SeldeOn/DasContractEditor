{"version":3,"sources":["../../../../../src/features/decision-table-head/editor/components/InputEditor.js"],"names":["Component","ContentEditable","InputEditor","props","context","translate","injector","get","noopTranslate","handleValue","text","change","handleChange","handleLabelChange","value","label","undefined","changes","onChange","join","str"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA,SAASA,SAAT,QAA0B,SAA1B;AAEA,OAAOC,eAAP,MAA4B,8CAA5B;;IAEqBC,W;;;;;AAEnB,uBAAYC,KAAZ,EAAmBC,OAAnB,EAA4B;AAAA;;AAAA;;AAC1B,8BAAMD,KAAN,EAAaC,OAAb;AAEA,UAAKC,SAAL,GAAiBD,OAAO,CAACE,QAAR,GAAmBF,OAAO,CAACE,QAAR,CAAiBC,GAAjB,CAAqB,WAArB,CAAnB,GAAuDC,aAAxE;;AAEA,UAAKC,WAAL,GAAmB,UAACC,IAAD,EAAU;AAE3B,UAAIC,MAAM,GAAG;AAAED,QAAAA,IAAI,EAAJA;AAAF,OAAb;;AAEA,YAAKE,YAAL,CAAkBD,MAAlB;AACD,KALD;;AAOA,UAAKE,iBAAL,GAAyB,UAACC,KAAD,EAAW;AAElC;AACA,UAAIC,KAAK,GAAGD,KAAK,IAAIE,SAArB;;AAEA,YAAKJ,YAAL,CAAkB;AAAEG,QAAAA,KAAK,EAALA;AAAF,OAAlB;AACD,KAND;;AAZ0B;AAmB3B;;;;WAED,sBAAaE,OAAb,EAAsB;AACpB,UAAMC,QAAN,GAAmB,KAAKf,KAAxB,CAAMe,QAAN;;AAEA,UAAI,OAAOA,QAAP,KAAoB,UAAxB,EAAoC;AAClCA,QAAAA,QAAQ,CAACD,OAAD,CAAR;AACD;AACF;;;WAED,kBAAS;AAEP,wBAGI,KAAKd,KAHT;AAAA,UACEY,KADF,eACEA,KADF;AAAA,UAEEL,IAFF,eAEEA,IAFF;AAKA,mCACiB,oDADjB,yBAGmB,kBAHnB;AAAA,qBAKkB,iBALlB;AAAA,iBAMgBK,KAAK,IAAI,EANzB;AAAA,uBAOsB,KAAKV,SAAL,CAAe,OAAf,CAPtB;AAAA;AAAA,mBASkB,KAAKQ;AATvB,oCAYmB,kBAZnB,2BAauB,WAbvB,EAeU,KAAKR,SAAL,CAAe,YAAf,CAfV;AAAA,uBAoBoB,kBApBpB;AAAA,qBAsBU,CACE,UADF,EAEE,WAFF,EAGEc,IAHF,CAGO,GAHP,CAtBV;AAAA,mBA2BkB,KAAKV,WA3BvB;AAAA,iBA4BgBC,IAAI,IAAI;AA5BxB;AAgCD;;;;EAtEsCV,S;;SAApBE,W;;AAyErB,SAASM,aAAT,CAAuBY,GAAvB,EAA4B;AAC1B,SAAOA,GAAP;AACD","sourcesContent":["import { Component } from 'inferno';\n\nimport ContentEditable from 'dmn-js-shared/lib/components/ContentEditable';\n\nexport default class InputEditor extends Component {\n\n  constructor(props, context) {\n    super(props, context);\n\n    this.translate = context.injector ? context.injector.get('translate') : noopTranslate;\n\n    this.handleValue = (text) => {\n\n      let change = { text };\n\n      this.handleChange(change);\n    };\n\n    this.handleLabelChange = (value) => {\n\n      // default to <undefined> for empty string\n      var label = value || undefined;\n\n      this.handleChange({ label });\n    };\n  }\n\n  handleChange(changes) {\n    var { onChange } = this.props;\n\n    if (typeof onChange === 'function') {\n      onChange(changes);\n    }\n  }\n\n  render() {\n\n    const {\n      label,\n      text\n    } = this.props;\n\n    return (\n      <div className=\"context-menu-container ref-input-editor input-edit\">\n\n        <div className=\"dms-form-control\">\n          <ContentEditable\n            className=\"dms-input-label\"\n            value={ label || '' }\n            placeholder={ this.translate('Input') }\n            singleLine\n            onInput={ this.handleLabelChange } />\n        </div>\n\n        <div className=\"dms-form-control\">\n          <label className=\"dms-label\">\n            {\n              this.translate('Expression')\n            }\n          </label>\n\n          <ContentEditable\n            placeholder=\"enter expression\"\n            className={\n              [\n                'ref-text',\n                'dms-input'\n              ].join(' ')\n            }\n            onInput={ this.handleValue }\n            value={ text || '' } />\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction noopTranslate(str) {\n  return str;\n}\n"],"file":"InputEditor.js"}