{"version":3,"sources":["../../../../src/features/simple-date-edit/components/InputDateEdit.js"],"names":["Component","ValidatedInput","InputSelect","getDateString","getSampleDate","validateISOString","parseString","EXACT","BEFORE","AFTER","BETWEEN","InputDateEdit","props","context","_modeling","injector","get","element","parsedString","businessObject","text","dates","date","state","type","debounceInput","debouncedEditCell","editCell","bind","onTypeChange","onSetStartDateTodayClick","onSetEndDateTodayClick","onStartDateInput","onEndDateInput","cell","value","setState","options","label"],"mappings":"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","sourcesContent":["import { Component } from 'inferno';\r\n\r\nimport ValidatedInput from 'dmn-js-shared/lib/components/ValidatedInput';\r\n\r\nimport InputSelect from 'dmn-js-shared/lib/components/InputSelect';\r\n\r\nimport {\r\n  getDateString,\r\n  getSampleDate,\r\n  validateISOString,\r\n  parseString\r\n} from '../Utils';\r\n\r\nconst EXACT = 'exact',\r\n      BEFORE = 'before',\r\n      AFTER = 'after',\r\n      BETWEEN = 'between';\r\n\r\n\r\nexport default class InputDateEdit extends Component {\r\n\r\n  constructor(props, context) {\r\n    super(props, context);\r\n\r\n    this._modeling = context.injector.get('modeling');\r\n\r\n    const { element } = this.props.context;\r\n\r\n    const parsedString = parseString(element.businessObject.text);\r\n\r\n    if (parsedString) {\r\n      let dates;\r\n\r\n      if (parsedString.date) {\r\n        dates = [ parsedString.date, '' ];\r\n      } else if (parsedString.dates) {\r\n        dates = parsedString.dates;\r\n      } else {\r\n        dates = [ '', '' ];\r\n      }\r\n\r\n      this.state = {\r\n        type: parsedString.type,\r\n        dates\r\n      };\r\n    } else {\r\n      this.state = {\r\n        type: EXACT,\r\n        dates: [ '', '' ]\r\n      };\r\n    }\r\n\r\n    const debounceInput = context.injector.get('debounceInput');\r\n\r\n    this.debouncedEditCell = debounceInput(this.editCell.bind(this));\r\n    this.editCell = this.editCell.bind(this);\r\n\r\n    this.onTypeChange = this.onTypeChange.bind(this);\r\n    this.onSetStartDateTodayClick = this.onSetStartDateTodayClick.bind(this);\r\n    this.onSetEndDateTodayClick = this.onSetEndDateTodayClick.bind(this);\r\n    this.onStartDateInput = this.onStartDateInput.bind(this);\r\n    this.onEndDateInput = this.onEndDateInput.bind(this);\r\n  }\r\n\r\n  editCell(cell, text) {\r\n    this._modeling.editCell(cell, text);\r\n  }\r\n\r\n  onTypeChange(value) {\r\n    const { element } = this.props.context;\r\n\r\n    const { dates } = this.state;\r\n\r\n    this.setState({\r\n      type: value\r\n    });\r\n\r\n    if (parseString(getDateString(value, dates))) {\r\n      this.editCell(element.businessObject, getDateString(value, dates));\r\n    }\r\n  }\r\n\r\n  onSetStartDateTodayClick() {\r\n    const { element } = this.props.context;\r\n\r\n    const { dates, type } = this.state;\r\n\r\n    const date = getSampleDate();\r\n\r\n    this.setState({\r\n      dates: [ date, dates[1] ]\r\n    });\r\n\r\n    if (parseString(getDateString(type, [ date, dates[1] ]))) {\r\n      this.editCell(element.businessObject, getDateString(type, [ date, dates[1] ]));\r\n    }\r\n  }\r\n\r\n  onSetEndDateTodayClick() {\r\n    const { element } = this.props.context;\r\n\r\n    const { dates, type } = this.state;\r\n\r\n    const date = getSampleDate();\r\n\r\n    this.setState({\r\n      dates: [ dates[0], date ]\r\n    });\r\n\r\n    if (parseString(getDateString(type, [ dates[0], date ]))) {\r\n      this.editCell(element.businessObject, getDateString(type, [ dates[0], date ]));\r\n    }\r\n  }\r\n\r\n  onStartDateInput({ value }) {\r\n    const { element } = this.props.context;\r\n\r\n    const { dates, type } = this.state;\r\n\r\n    this.setState({\r\n      dates: [ value, dates[1] ]\r\n    });\r\n\r\n    this.debouncedEditCell(\r\n      element.businessObject,\r\n      getDateString(type, [ value, dates[1] ])\r\n    );\r\n  }\r\n\r\n  onEndDateInput({ value }) {\r\n    const { element } = this.props.context;\r\n\r\n    const { dates, type } = this.state;\r\n\r\n    this.setState({\r\n      dates: [ dates[0], value ]\r\n    });\r\n\r\n    this.debouncedEditCell(\r\n      element.businessObject,\r\n      getDateString(type, [ dates[0], value ])\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const { dates, type } = this.state;\r\n\r\n    const options = [{\r\n      label: 'Exactly',\r\n      value: EXACT\r\n    }, {\r\n      label: 'Before',\r\n      value: BEFORE\r\n    }, {\r\n      label: 'After',\r\n      value: AFTER\r\n    }, {\r\n      label: 'Between',\r\n      value: BETWEEN\r\n    }];\r\n\r\n    return (\r\n      <div class=\"context-menu-container simple-date-edit\">\r\n\r\n        <h3 class=\"dms-heading\">Edit date</h3>\r\n\r\n        <div className=\"dms-fill-row\">\r\n          <InputSelect\r\n            noInput={ true }\r\n            onChange={ this.onTypeChange }\r\n            options={ options }\r\n            value={ type } />\r\n        </div>\r\n\r\n        <h4 class=\"dms-heading\">\r\n          {\r\n            type === BETWEEN\r\n              ? 'Edit start date'\r\n              : 'Set date'\r\n          }\r\n        </h4>\r\n\r\n        <div>\r\n          <ValidatedInput\r\n            className=\"start-date-input dms-block\"\r\n            onInput={ this.onStartDateInput }\r\n            placeholder={ `e.g. ${ getSampleDate() }` }\r\n            validate={ validateISOString }\r\n            value={ dates[0] } />\r\n\r\n          <p className=\"dms-hint\">\r\n            <button type=\"button\"\r\n              className=\"use-today\"\r\n              onClick={ this.onSetStartDateTodayClick }>Use today</button>.\r\n          </p>\r\n        </div>\r\n\r\n        {\r\n          type === BETWEEN\r\n            && <h4 class=\"dms-heading\">\r\n              Edit end date\r\n            </h4>\r\n        }\r\n\r\n        {\r\n          type === BETWEEN\r\n            && <div>\r\n              <ValidatedInput\r\n                className=\"end-date-input dms-block\"\r\n                onInput={ this.onEndDateInput }\r\n                placeholder={ `e.g. ${ getSampleDate() }` }\r\n                validate={ validateISOString }\r\n                value={ dates[1] }>\r\n              </ValidatedInput>\r\n\r\n              <p className=\"dms-hint\">\r\n                <button type=\"button\"\r\n                  className=\"use-today\"\r\n                  onClick={ this.onSetEndDateTodayClick }>Use today</button>.\r\n              </p>\r\n            </div>\r\n        }\r\n\r\n      </div>\r\n    );\r\n  }\r\n}"],"file":"InputDateEdit.js"}