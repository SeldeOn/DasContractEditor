{"version":3,"sources":["../../../src/features/simple-date-edit/Utils.js"],"names":["ISO_DATE_REGEX","BETWEEN_DATE_REGEX","BEFORE_AFTER_DATE_REGEX","EXACT_DATE_REGEX","EXACT","BEFORE","AFTER","BETWEEN","validateISOString","string","test","trim","getDateString","type","dates","getSampleDate","date","Date","setUTCHours","toISOString","slice","parseString","matches","match"],"mappings":"AAAA,IAAMA,cAAc,GAAG,qBAAvB,C,CAEA;;AACA,IAAMC,kBAAkB,GAAG,4CAA3B,C,CAEA;;AACA,IAAMC,uBAAuB,GAAG,6BAAhC;AAEA,IAAMC,gBAAgB,GAAG,qBAAzB;AAEA,IAAMC,KAAK,GAAG,OAAd;AAAA,IACMC,MAAM,GAAG,QADf;AAAA,IAEMC,KAAK,GAAG,OAFd;AAAA,IAGMC,OAAO,GAAG,SAHhB;AAKA,OAAO,SAASC,iBAAT,CAA2BC,MAA3B,EAAmC;AACxC,MAAI,CAACT,cAAc,CAACU,IAAf,CAAoBD,MAAM,CAACE,IAAP,EAApB,CAAL,EAAyC;AACvC,WAAO,qCAAP;AACD;AACF;AAED,OAAO,SAASC,aAAT,CAAuBC,IAAvB,EAA6BC,KAA7B,EAAoC;AACzC,MAAID,IAAI,KAAKT,KAAb,EAAoB;AAClB,4BAAiBU,KAAK,CAAC,CAAD,CAAtB;AACD,GAFD,MAEO,IAAID,IAAI,KAAKR,MAAb,EAAqB;AAC1B,8BAAmBS,KAAK,CAAC,CAAD,CAAxB;AACD,GAFM,MAEA,IAAID,IAAI,KAAKP,KAAb,EAAoB;AACzB,8BAAmBQ,KAAK,CAAC,CAAD,CAAxB;AACD,GAFM,MAEA,IAAID,IAAI,KAAKN,OAAb,EAAsB;AAC3B,6BAAkBO,KAAK,CAAC,CAAD,CAAvB,yBAAyCA,KAAK,CAAC,CAAD,CAA9C;AACD;AACF;AAED,OAAO,SAASC,aAAT,GAAyB;AAC9B,MAAMC,IAAI,GAAG,IAAIC,IAAJ,EAAb;AAEAD,EAAAA,IAAI,CAACE,WAAL,CAAiB,CAAjB,EAAoB,CAApB,EAAuB,CAAvB,EAA0B,CAA1B;AAEA,SAAOF,IAAI,CAACG,WAAL,GAAmBC,KAAnB,CAAyB,CAAzB,EAA4B,EAA5B,CAAP;AACD;AAED,OAAO,SAASC,WAAT,CAAqBZ,MAArB,EAA6B;AAElC;AACA,MAAI,CAACA,MAAD,IAAWA,MAAM,CAACE,IAAP,OAAkB,EAAjC,EAAqC;AACnC,WAAO;AACLE,MAAAA,IAAI,EAAE,OADD;AAELG,MAAAA,IAAI,EAAE;AAFD,KAAP;AAID,GARiC,CAUlC;;;AACA,MAAIM,OAAO,GAAGb,MAAM,CAACc,KAAP,CAAatB,kBAAb,CAAd;;AAEA,MAAIqB,OAAJ,EAAa;AACX,WAAO;AACLT,MAAAA,IAAI,EAAE,SADD;AAELC,MAAAA,KAAK,EAAE,CAAEQ,OAAO,CAAC,CAAD,CAAT,EAAcA,OAAO,CAAC,CAAD,CAArB;AAFF,KAAP;AAID,GAlBiC,CAoBlC;;;AACAA,EAAAA,OAAO,GAAGb,MAAM,CAACc,KAAP,CAAarB,uBAAb,CAAV;;AAEA,MAAIoB,OAAJ,EAAa;AACX,WAAO;AACLT,MAAAA,IAAI,EAAES,OAAO,CAAC,CAAD,CAAP,KAAe,GAAf,GAAqB,QAArB,GAAgC,OADjC;AAELN,MAAAA,IAAI,EAAEM,OAAO,CAAC,CAAD;AAFR,KAAP;AAID,GA5BiC,CA8BlC;;;AACAA,EAAAA,OAAO,GAAGb,MAAM,CAACc,KAAP,CAAapB,gBAAb,CAAV;;AAEA,MAAImB,OAAJ,EAAa;AACX,WAAO;AACLT,MAAAA,IAAI,EAAE,OADD;AAELG,MAAAA,IAAI,EAAEM,OAAO,CAAC,CAAD;AAFR,KAAP;AAID;AACF","sourcesContent":["const ISO_DATE_REGEX = /^\\d{4}(?:-\\d\\d){2}$/;\r\n\r\n// eslint-disable-next-line\r\nconst BETWEEN_DATE_REGEX = /^\\[date\\(\"([^\"]*)\"\\)..date\\(\"([^\"]*)\"\\)\\]$/;\r\n\r\n// eslint-disable-next-line\r\nconst BEFORE_AFTER_DATE_REGEX = /^(<|>)\\s*date\\(\"([^\"]*)\"\\)$/;\r\n\r\nconst EXACT_DATE_REGEX = /^date\\(\"([^\"]*)\"\\)$/;\r\n\r\nconst EXACT = 'exact',\r\n      BEFORE = 'before',\r\n      AFTER = 'after',\r\n      BETWEEN = 'between';\r\n\r\nexport function validateISOString(string) {\r\n  if (!ISO_DATE_REGEX.test(string.trim())) {\r\n    return 'Date must match pattern yyyy-MM-dd.';\r\n  }\r\n}\r\n\r\nexport function getDateString(type, dates) {\r\n  if (type === EXACT) {\r\n    return `date(\"${ dates[0] }\")`;\r\n  } else if (type === BEFORE) {\r\n    return `< date(\"${ dates[0] }\")`;\r\n  } else if (type === AFTER) {\r\n    return `> date(\"${ dates[0] }\")`;\r\n  } else if (type === BETWEEN) {\r\n    return `[date(\"${ dates[0] }\")..date(\"${ dates[1] }\")]`;\r\n  }\r\n}\r\n\r\nexport function getSampleDate() {\r\n  const date = new Date();\r\n\r\n  date.setUTCHours(0, 0, 0, 0);\r\n\r\n  return date.toISOString().slice(0, 10);\r\n}\r\n\r\nexport function parseString(string) {\r\n\r\n  // emtpy\r\n  if (!string || string.trim() === '') {\r\n    return {\r\n      type: 'exact',\r\n      date: ''\r\n    };\r\n  }\r\n\r\n  // between\r\n  let matches = string.match(BETWEEN_DATE_REGEX);\r\n\r\n  if (matches) {\r\n    return {\r\n      type: 'between',\r\n      dates: [ matches[1], matches[2] ]\r\n    };\r\n  }\r\n\r\n  // before or after\r\n  matches = string.match(BEFORE_AFTER_DATE_REGEX);\r\n\r\n  if (matches) {\r\n    return {\r\n      type: matches[1] === '<' ? 'before' : 'after',\r\n      date: matches[2]\r\n    };\r\n  }\r\n\r\n  // exact\r\n  matches = string.match(EXACT_DATE_REGEX);\r\n\r\n  if (matches) {\r\n    return {\r\n      type: 'exact',\r\n      date: matches[1]\r\n    };\r\n  }\r\n}"],"file":"Utils.js"}