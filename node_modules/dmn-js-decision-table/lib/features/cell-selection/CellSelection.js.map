{"version":3,"sources":["../../../src/features/cell-selection/CellSelection.js"],"names":["ensureFocus","findSelectableAncestor","getElementCoords","getElementId","getNodeByCoords","getNodeById","isUnselectableNode","LOW_PRIORITY","VALID_DIRECTIONS","above","below","right","left","CellSelection","config","eventBus","sheet","selection","elementRegistry","container","lastSelection","emit","elementId","newSelection","fire","click","event","target","selectableNode","focussed","defaultPrevented","realSelect","focus","stopPropagation","unfocus","selected","select","deselect","on","actualElement","oldSelection","id","oldElementId","isCellSelected","getCellSelection","selectCell","direction","Error","selectionEl","coords","nextCoords","getNextCoords","nextNode","nextElId","$inject","row","col","rowIndex","parseInt","isNaN","nextRowIndex","colIndex","nextColIndex"],"mappings":"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","sourcesContent":["import {\n  ensureFocus,\n  findSelectableAncestor,\n  getElementCoords,\n  getElementId,\n  getNodeByCoords,\n  getNodeById,\n  isUnselectableNode\n} from './CellSelectionUtil';\n\nconst LOW_PRIORITY = 500;\n\nconst VALID_DIRECTIONS = {\n  above: true,\n  below: true,\n  right: true,\n  left: true\n};\n\n\n/**\n * A cell selection utlity; allows selection of elements, independent from\n * whether they are backed by a business object or not.\n *\n * Works together with the {@link SelectionAware} trait.\n *\n * @param {RenderConfig} config\n * @param {EventBus} eventBus\n * @param {Sheet} sheet\n * @param {Selection} selection\n * @param {ElementRegistry} elementRegistry\n */\nexport default function CellSelection(\n    config, eventBus, sheet,\n    selection, elementRegistry) {\n\n  const {\n    container\n  } = config;\n\n  let lastSelection = null;\n\n  function emit(elementId, newSelection) {\n\n    eventBus.fire('selection.' + elementId + '.changed', newSelection);\n\n    eventBus.fire('cellSelection.changed', {\n      elementId: elementId,\n      selection: newSelection\n    });\n\n  }\n\n  function click(event) {\n\n    const target = event.target;\n\n    if (isUnselectableNode(target)) {\n      return;\n    }\n\n    const selectableNode = findSelectableAncestor(target);\n\n    const elementId = selectableNode && getElementId(selectableNode);\n\n    const focussed = !event.defaultPrevented;\n\n    realSelect(elementId, focussed);\n  }\n\n  function focus(event) {\n    const elementId = getElementId(event.target);\n\n    const focussed = !event.defaultPrevented;\n\n    event.stopPropagation();\n\n    return realSelect(elementId, focussed);\n  }\n\n  function unfocus(event) {\n    const elementId = getElementId(event.target);\n\n    emit(elementId, {\n      focussed: false\n    });\n  }\n\n  function realSelect(elementId, focussed = true) {\n\n    if (lastSelection !== elementId) {\n      emit(lastSelection, {\n        selected: false,\n        focussed: false\n      });\n    }\n\n    lastSelection = elementId;\n\n    if (elementId) {\n      emit(elementId, {\n        selected: true,\n        focussed\n      });\n    }\n\n    if (elementId) {\n      selection.select(elementId);\n    } else {\n      selection.deselect();\n    }\n  }\n\n  eventBus.on('cell.click', LOW_PRIORITY, click);\n  eventBus.on('cell.focusin', LOW_PRIORITY, focus);\n  eventBus.on('cell.focusout', LOW_PRIORITY, unfocus);\n\n  eventBus.on('cellSelection.changed', function(event) {\n\n    const {\n      elementId,\n      selection\n    } = event;\n\n    const actualElement = getNodeById(elementId, container);\n\n    if (selection.focussed && actualElement) {\n      ensureFocus(actualElement);\n    }\n  });\n\n  eventBus.on('selection.changed', function(event) {\n\n    const {\n      selection,\n      oldSelection\n    } = event;\n\n    var elementId = selection && selection.id;\n    var oldElementId = oldSelection && oldSelection.id;\n\n    // select new element\n    if (elementId && elementId !== lastSelection) {\n      realSelect(selection.id);\n    } else\n\n    // deselect old element\n    if (oldElementId && oldElementId === lastSelection) {\n      realSelect();\n    }\n\n  });\n\n  // API //////////////////////\n\n  /**\n   * Return true if a cell is currently selected.\n   *\n   * @return {boolean}\n   */\n  this.isCellSelected = function() {\n    return !!lastSelection;\n  };\n\n  /**\n   * Get the currently active cellSelection.\n   *\n   * @return {string} selection\n   */\n  this.getCellSelection = function() {\n    return lastSelection;\n  };\n\n  /**\n   * Select next cell in given direction.\n   *\n   * Returns true on success; false on fail (i.e. if no next selection\n   * in direction could be found).\n   *\n   * @param {string} direction\n   *\n   * @return {boolean}\n   */\n  this.selectCell = function(direction) {\n\n    if (!lastSelection) {\n      return;\n    }\n\n    if (!(direction in VALID_DIRECTIONS)) {\n      throw new Error('direction must be any of { above, below, left, right }');\n    }\n\n    var selectionEl = getNodeById(lastSelection, container);\n\n    const coords = getElementCoords(selectionEl);\n\n    if (!coords) {\n      return false;\n    }\n\n    const nextCoords = getNextCoords(coords, direction);\n\n    const nextNode = getNodeByCoords(nextCoords, container);\n\n    if (!nextNode) {\n      return false;\n    }\n\n    const nextElId = getElementId(nextNode);\n\n    if (nextElId) {\n      realSelect(nextElId, {\n        focussed: true,\n        selected: true\n      });\n    }\n\n    return true;\n  };\n\n\n  eventBus.on('contextMenu.close', function() {\n\n    if (lastSelection) {\n      return realSelect(lastSelection);\n    }\n\n  });\n\n}\n\nCellSelection.$inject = [\n  'config.renderer',\n  'eventBus',\n  'sheet',\n  'selection',\n  'elementRegistry'\n];\n\n\n\n// helpers ////////////////\n\nfunction getNextCoords(coords, direction) {\n\n  const {\n    row,\n    col\n  } = coords;\n\n  if (direction === 'above' || direction === 'below') {\n\n    const rowIndex = parseInt(row, 10);\n\n    if (isNaN(rowIndex)) {\n      return coords;\n    }\n\n    const nextRowIndex = direction === 'above' ? rowIndex - 1 : rowIndex + 1;\n\n    return {\n      col,\n      row: nextRowIndex\n    };\n  }\n\n  if (direction === 'left' || direction === 'right') {\n\n    const colIndex = parseInt(col, 10);\n\n    if (isNaN(colIndex)) {\n      return coords;\n    }\n\n    const nextColIndex = direction === 'left' ? colIndex - 1 : colIndex + 1;\n\n    return {\n      row,\n      col: nextColIndex\n    };\n  }\n\n  throw new Error('invalid direction <' + direction + '>');\n}"],"file":"CellSelection.js"}