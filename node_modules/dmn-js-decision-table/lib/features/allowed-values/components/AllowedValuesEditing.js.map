{"version":3,"sources":["../../../../src/features/allowed-values/components/AllowedValuesEditing.js"],"names":["Component","is","List","ValidatedInput","getValuesArray","parseString","AllowedValuesEditing","props","context","forceUpdate","values","target","getAllowedValuesTarget","setState","_modeling","editAllowedValues","setPredefinedValues","isValid","value","inputValue","event","isEnter","keyCode","stopPropagation","preventDefault","state","parsedString","onListChange","concat","map","isCheckable","isRemovable","group","e","removePredefinedValues","_translate","injector","get","_changeSupport","changeSupport","inputValues","text","outputValues","onElementsChanged","id","offElementsChanged","element","getElement","$parent","output","input","inputExpression","typeRef","isNull","length","Label","handleRemovePredifinedValuesClick","onInput","onKeyDown","label"],"mappings":"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","sourcesContent":["import { Component } from 'inferno';\n\nimport { is } from 'dmn-js-shared/lib/util/ModelUtil';\n\nimport List from 'dmn-js-shared/lib/components/List';\n\nimport ValidatedInput from 'dmn-js-shared/lib/components/ValidatedInput';\n\nimport {\n  getValuesArray,\n  parseString\n} from '../Utils';\n\n\nexport default class AllowedValuesEditing extends Component {\n\n  constructor(props, context) {\n    super(props, context);\n\n    this._translate = context.injector.get('translate');\n\n    this._modeling = context.injector.get('modeling');\n    this._changeSupport = context.changeSupport;\n\n    const target = this.getAllowedValuesTarget();\n\n    const parsedString = parseString(\n      (target.inputValues && target.inputValues.text) ||\n      (target.outputValues && target.outputValues.text) ||\n      ''\n    );\n\n    if (parsedString) {\n      this.state = {\n        values: parsedString.values.map(value => {\n          return {\n            value,\n            isCheckable: false,\n            isRemovable: true,\n            group: 'Predefined Values'\n          };\n        }),\n        inputValue: ''\n      };\n    } else {\n      this.state = {\n        values: null,\n        inputValue: ''\n      };\n    }\n  }\n\n  onElementsChanged = () => {\n    this.forceUpdate();\n  }\n\n  componentWillMount() {\n    const target = this.getAllowedValuesTarget();\n\n    this._changeSupport.onElementsChanged(target.id, this.onElementsChanged);\n  }\n\n  componentWillUnmount() {\n    const target = this.getAllowedValuesTarget();\n\n    this._changeSupport.offElementsChanged(target.id, this.onElementsChanged);\n  }\n\n  setPredefinedValues = (values) => {\n\n    // inputClause or outputClause\n    const target = this.getAllowedValuesTarget();\n\n    this.setState({\n      values\n    });\n\n    this._modeling.editAllowedValues(\n      target,\n      values && getValuesArray(values)\n    );\n  }\n\n  onListChange = (values) => {\n    this.setPredefinedValues(values);\n  }\n\n  getAllowedValuesTarget() {\n    const element = this.getElement();\n\n    if (is(element, 'dmn:LiteralExpression')) {\n      return element.$parent;\n    } else {\n      return element;\n    }\n  }\n\n  onInput = ({ isValid, value }) => {\n    this.setState({\n      inputValue: value\n    });\n  }\n\n  /**\n   * Add new value on ENTER.\n   */\n  onKeyDown = ({ isValid, event }) => {\n\n    if (!isEnter(event.keyCode)) {\n      return;\n    }\n\n    event.stopPropagation();\n    event.preventDefault();\n\n    if (isValid) {\n      const {\n        inputValue,\n        values\n      } = this.state;\n\n      const parsedString = parseString(inputValue);\n\n      this.onListChange((values || []).concat(parsedString.values.map(value => {\n        return {\n          value,\n          isCheckable: false,\n          isRemovable: true,\n          group: 'Predefined Values'\n        };\n      })));\n\n      this.setState({\n        inputValue: ''\n      });\n\n    }\n  }\n\n  handleRemovePredifinedValuesClick = (e) => {\n    e.stopPropagation();\n\n    this.removePredefinedValues();\n  }\n\n  removePredefinedValues = () => {\n    this.setPredefinedValues(null);\n  }\n\n  getElement() {\n    return this.props.context.output || this.props.context.input.inputExpression;\n  }\n\n  render() {\n    const element = this.getElement();\n\n    const {\n      inputValue,\n      values\n    } = this.state;\n\n    return (\n      element.typeRef === 'string' ?\n        <div className=\"context-menu-container allowed-values-edit\">\n          <div className=\"dms-form-control\">\n            {\n              !isNull(values)\n              && values.length > 0\n              && <List\n                labelComponent={ Label }\n                items={ values }\n                onChange={ this.onListChange } />\n            }\n\n            {\n              !isNull(values)\n              && !values.length\n              && <div>\n                <label className=\"dms-label\">\n                  { this._translate('Predefined Values') }\n                </label>\n                <span className=\"placeholder\">\n                  { this._translate('No values') }\n                </span>\n              </div>\n            }\n\n            {\n              !isNull(values)\n              && <p class=\"dms-hint\">\n                <button type=\"button\" className=\"del-values\"\n                  onClick={ this.handleRemovePredifinedValuesClick }>\n                  { this._translate('Clear predefined values.') }\n                </button>\n              </p>\n            }\n\n            <label className=\"dms-label\">\n              { this._translate('Add Predefined Values') }\n            </label>\n\n            <ValidatedInput\n              onInput={ this.onInput }\n              onKeyDown={ this.onKeyDown }\n              placeholder={ '\"value\", \"value\", ...' }\n              type=\"text\"\n              validate={ value => {\n                if (!parseString(value)) {\n                  return this._translate('Strings must be in double quotes.');\n                }\n              } }\n              value={ inputValue } />\n          </div>\n        </div>\n        : null\n    );\n  }\n}\n\nfunction Label(label) {\n  return <label className=\"dms-label\">{ label }</label>;\n}\n\n\n// helpers //////////////////////\n\nfunction isEnter(keyCode) {\n  return keyCode === 13;\n}\n\nfunction isNull(value) {\n  return value === null;\n}"],"file":"AllowedValuesEditing.js"}