{"version":3,"sources":["../../../../src/features/column-resize/components/ResizeColumn.js"],"names":["Component","inject","closest","domClosest","is","getBusinessObject","ResizeColumn","props","context","forceUpdate","event","cell","target","startResize","node","minWidth","onEnd","saveWidth","newWidth","col","update","annotationsWidth","width","modeling","updateProperties","root","getRoot","changeSupport","onElementsChanged","offElementsChanged","sheet","bo","inputs","get","indexOf","length","outputs","style","isLastInputOrOutput","right","handleMouseDown","translate","$inject","noop","preventDefault","initialWidth","getBoundingClientRect","initialX","clientX","currentUpdate","document","addEventListener","handleMouseMove","handleMouseUp","currentWidth","getResizedWidth","cancelAnimationFrame","requestAnimationFrame","removeEventListener","currentX","delta","Math","max"],"mappings":"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","sourcesContent":["import { Component } from 'inferno';\n\nimport { inject } from 'table-js/lib/components';\n\nimport {\n  closest as domClosest\n} from 'min-dom';\n\nimport { is, getBusinessObject } from 'dmn-js-shared/lib/util/ModelUtil';\n\n\nexport default class ResizeColumn extends Component {\n\n  constructor(props, context) {\n    super(props, context);\n\n    inject(this);\n  }\n\n  componentDidMount() {\n    const root = this.getRoot();\n\n    this.changeSupport.onElementsChanged(root, this.onElementsChanged);\n  }\n\n  componentWillUnmount() {\n    const root = this.getRoot();\n\n    this.changeSupport.offElementsChanged(root, this.onElementsChanged);\n  }\n\n  getRoot() {\n    return this.sheet.getRoot();\n  }\n\n  onElementsChanged = () => {\n    this.forceUpdate();\n  }\n\n  handleMouseDown = event => {\n    const cell = domClosest(event.target, 'th', false);\n\n    startResize({\n      node: cell,\n      event,\n      minWidth: this.props.minWidth || 150,\n      onEnd: this.saveWidth\n    });\n  }\n\n  saveWidth = newWidth => {\n    const { col } = this.props;\n\n    const update = {};\n\n    if (is(col, 'dmn:DecisionTable')) {\n      update.annotationsWidth = newWidth;\n    } else {\n      update.width = newWidth;\n    }\n\n    this.modeling.updateProperties(col, update);\n  }\n\n  isLastInputOrOutput() {\n    const { col } = this.props,\n          root = this.getRoot(),\n          bo = getBusinessObject(root);\n\n    if (is(col, 'dmn:InputClause')) {\n      const inputs = bo.get('input');\n\n      return inputs.indexOf(col) === inputs.length - 1;\n    } else if (is(col, 'dmn:OutputClause')) {\n      const outputs = bo.get('output');\n\n      return outputs.indexOf(col) === outputs.length - 1;\n    }\n  }\n\n  render() {\n    const style = this.isLastInputOrOutput() ? {\n      right: '-7px',\n      width: '27px'\n    } : null;\n\n    return (\n      <div\n        onMouseDown={ this.handleMouseDown }\n        className=\"resize-column-handle\"\n        title={ this.translate('Resize') }\n        style={ style }\n      />\n    );\n  }\n}\n\nResizeColumn.$inject = [ 'sheet', 'changeSupport', 'translate', 'modeling' ];\n\n// helper\nfunction startResize({ node, event, minWidth, onEnd = noop }) {\n  event.preventDefault();\n\n  const initialWidth = node.getBoundingClientRect().width;\n  const initialX = event.clientX;\n\n  let currentUpdate;\n\n  document.addEventListener('mousemove', handleMouseMove);\n  document.addEventListener('mouseup', handleMouseUp);\n\n  function handleMouseMove(event) {\n    event.preventDefault();\n\n    const currentWidth = getResizedWidth(event.clientX);\n\n    if (currentUpdate) {\n      cancelAnimationFrame(currentUpdate);\n    }\n\n    currentUpdate = requestAnimationFrame(() => {\n      node.style.width = currentWidth + 'px';\n    });\n  }\n\n  function handleMouseUp(event) {\n    event.preventDefault();\n\n    document.removeEventListener('mousemove', handleMouseMove);\n    document.removeEventListener('mouseup', handleMouseUp);\n\n    const currentWidth = getResizedWidth(event.clientX);\n\n    onEnd(currentWidth);\n  }\n\n  function getResizedWidth(currentX) {\n    const delta = currentX - initialX;\n\n    return Math.max(initialWidth + delta, minWidth);\n  }\n}\n\nfunction noop() {}\n"],"file":"ResizeColumn.js"}