{"version":3,"sources":["../../../src/features/simple-mode/SimpleMode.js"],"names":["SimpleModeButtonComponent","SimpleMode","components","contextMenu","elementRegistry","eventBus","renderer","_providers","onGetComponent","on","element","node","getBoundingClientRect","left","top","width","height","container","getContainer","open","x","parentNode","scrollLeft","y","scrollTop","contextMenuType","offset","e","event","id","isCmd","get","fire","preventDefault","provider","push","reduce","canSimpleEdit","$inject","altKey","ctrlKey","metaKey"],"mappings":";;;;;;AAAA,OAAOA,yBAAP,MAAsC,wCAAtC;;IAEqBC,U;AAEnB,sBAAYC,UAAZ,EAAwBC,WAAxB,EAAqCC,eAArC,EAAsDC,QAAtD,EAAgEC,QAAhE,EAA0E;AAAA;;AAExE,SAAKC,UAAL,GAAkB,EAAlB;AAEAL,IAAAA,UAAU,CAACM,cAAX,CAA0B,cAA1B,EAA0C,YAAM;AAC9C,aAAOR,yBAAP;AACD,KAFD;AAIAK,IAAAA,QAAQ,CAACI,EAAT,CAAY,iBAAZ,EAA+B,gBAAuB;AAAA,UAApBC,OAAoB,QAApBA,OAAoB;AAAA,UAAXC,IAAW,QAAXA,IAAW;;AACpD,kCAAqCA,IAAI,CAACC,qBAAL,EAArC;AAAA,UAAQC,IAAR,yBAAQA,IAAR;AAAA,UAAcC,GAAd,yBAAcA,GAAd;AAAA,UAAmBC,KAAnB,yBAAmBA,KAAnB;AAAA,UAA0BC,MAA1B,yBAA0BA,MAA1B;;AAEA,UAAMC,SAAS,GAAGX,QAAQ,CAACY,YAAT,EAAlB;AAEAf,MAAAA,WAAW,CAACgB,IAAZ,CAAiB;AACfC,QAAAA,CAAC,EAAEP,IAAI,GAAGI,SAAS,CAACI,UAAV,CAAqBC,UADhB;AAEfC,QAAAA,CAAC,EAAET,GAAG,GAAGG,SAAS,CAACI,UAAV,CAAqBG,SAFf;AAGfT,QAAAA,KAAK,EAALA,KAHe;AAIfC,QAAAA,MAAM,EAANA;AAJe,OAAjB,EAKG;AACDS,QAAAA,eAAe,EAAE,kBADhB;AAEDf,QAAAA,OAAO,EAAPA,OAFC;AAGDgB,QAAAA,MAAM,EAAE;AACNN,UAAAA,CAAC,EAAE,CADG;AAENG,UAAAA,CAAC,EAAE;AAFG;AAHP,OALH;AAaD,KAlBD;AAoBAlB,IAAAA,QAAQ,CAACI,EAAT,CAAY,YAAZ,EAA0B,UAAAkB,CAAC,EAAI;AAE7B,UACEC,KADF,GAIID,CAJJ,CACEC,KADF;AAAA,UAEEjB,IAFF,GAIIgB,CAJJ,CAEEhB,IAFF;AAAA,UAGEkB,EAHF,GAIIF,CAJJ,CAGEE,EAHF;;AAMA,UAAIC,KAAK,CAACF,KAAD,CAAT,EAAkB;AAChB,YAAMlB,OAAO,GAAGN,eAAe,CAAC2B,GAAhB,CAAoBF,EAApB,CAAhB;;AAEA,YAAInB,OAAJ,EAAa;AACXL,UAAAA,QAAQ,CAAC2B,IAAT,CAAc,iBAAd,EAAiC;AAC/BrB,YAAAA,IAAI,EAAJA,IAD+B;AAE/BD,YAAAA,OAAO,EAAPA;AAF+B,WAAjC;AAID,SARe,CAUhB;;;AACAiB,QAAAA,CAAC,CAACM,cAAF;AACD;AACF,KArBD;AAsBD;;;;WAED,0BAAiBC,QAAjB,EAA2B;AACzB,WAAK3B,UAAL,CAAgB4B,IAAhB,CAAqBD,QAArB;AACD;;;WAED,uBAAcxB,OAAd,EAAuB;AACrB,aAAO,KAAKH,UAAL,CAAgB6B,MAAhB,CAAuB,UAACC,aAAD,EAAgBH,QAAhB,EAA6B;AACzD,eAAOG,aAAa,IAAIH,QAAQ,CAACxB,OAAD,CAAhC;AACD,OAFM,EAEJ,KAFI,CAAP;AAGD;;;;;;SA9DkBT,U;AAiErBA,UAAU,CAACqC,OAAX,GAAqB,CACnB,YADmB,EAEnB,aAFmB,EAGnB,iBAHmB,EAInB,UAJmB,EAKnB,UALmB,CAArB,C,CASA;;AAEA,OAAO,SAASR,KAAT,CAAeF,KAAf,EAAsB;AAE3B;AACA;AACA,MAAIA,KAAK,CAACW,MAAV,EAAkB;AAChB,WAAO,KAAP;AACD;;AAED,SAAOX,KAAK,CAACY,OAAN,IAAiBZ,KAAK,CAACa,OAA9B;AACD","sourcesContent":["import SimpleModeButtonComponent from './components/SimpleModeButtonComponent';\r\n\r\nexport default class SimpleMode {\r\n\r\n  constructor(components, contextMenu, elementRegistry, eventBus, renderer) {\r\n\r\n    this._providers = [];\r\n\r\n    components.onGetComponent('table.before', () => {\r\n      return SimpleModeButtonComponent;\r\n    });\r\n\r\n    eventBus.on('simpleMode.open', ({ element, node }) => {\r\n      const { left, top, width, height } = node.getBoundingClientRect();\r\n\r\n      const container = renderer.getContainer();\r\n\r\n      contextMenu.open({\r\n        x: left + container.parentNode.scrollLeft,\r\n        y: top + container.parentNode.scrollTop,\r\n        width,\r\n        height\r\n      }, {\r\n        contextMenuType: 'simple-mode-edit',\r\n        element,\r\n        offset: {\r\n          x: 4,\r\n          y: 4\r\n        }\r\n      });\r\n    });\r\n\r\n    eventBus.on('cell.click', e => {\r\n\r\n      const {\r\n        event,\r\n        node,\r\n        id\r\n      } = e;\r\n\r\n      if (isCmd(event)) {\r\n        const element = elementRegistry.get(id);\r\n\r\n        if (element) {\r\n          eventBus.fire('simpleMode.open', {\r\n            node,\r\n            element\r\n          });\r\n        }\r\n\r\n        // prevent focus\r\n        e.preventDefault();\r\n      }\r\n    });\r\n  }\r\n\r\n  registerProvider(provider) {\r\n    this._providers.push(provider);\r\n  }\r\n\r\n  canSimpleEdit(element) {\r\n    return this._providers.reduce((canSimpleEdit, provider) => {\r\n      return canSimpleEdit || provider(element);\r\n    }, false);\r\n  }\r\n}\r\n\r\nSimpleMode.$inject = [\r\n  'components',\r\n  'contextMenu',\r\n  'elementRegistry',\r\n  'eventBus',\r\n  'renderer'\r\n];\r\n\r\n\r\n// helpers //////////\r\n\r\nexport function isCmd(event) {\r\n\n  // ensure we don't react to AltGr\r\n  // (mapped to CTRL + ALT)\r\n  if (event.altKey) {\r\n    return false;\r\n  }\r\n\r\n  return event.ctrlKey || event.metaKey;\r\n}"],"file":"SimpleMode.js"}