{"version":3,"sources":["../../../src/features/editor-actions/DecisionTableEditorActions.js"],"names":["is","DecisionTableEditorActions","copyCutPaste","editorActions","modeling","selection","cellSelection","sheet","actions","addRule","addRow","type","addRuleAbove","context","rule","hasSelection","get","row","root","getRoot","index","rows","indexOf","addRuleBelow","removeRule","removeRow","addInput","businessObject","input","addCol","length","addInputLeft","col","cols","addInputRight","removeInput","removeCol","addOutput","output","addOutputLeft","addOutputRight","removeOutput","addClause","clause","addClauseLeft","addClauseRight","removeClause","selectCellAbove","selectCell","selectCellBelow","copy","element","cut","pasteBefore","pasteAfter","register","$inject"],"mappings":"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","sourcesContent":["import { is } from 'dmn-js-shared/lib/util/ModelUtil';\n\nexport default class DecisionTableEditorActions {\n\n  constructor(copyCutPaste, editorActions, modeling, selection, cellSelection, sheet) {\n    const actions = {\n      addRule() {\n        return modeling.addRow({ type: 'dmn:DecisionRule' });\n      },\n      addRuleAbove(context) {\n        let rule = context && context.rule;\n\n        if (!rule && !selection.hasSelection()) {\n          return;\n        }\n\n        rule = rule || selection.get().row;\n\n        const root = sheet.getRoot(),\n              index = root.rows.indexOf(rule);\n\n        if (index === -1) {\n          return;\n        }\n\n        return modeling.addRow({ type: 'dmn:DecisionRule' }, index);\n      },\n      addRuleBelow(context) {\n        let rule = context && context.rule;\n\n        if (!rule && !selection.hasSelection()) {\n          return;\n        }\n\n        rule = rule || selection.get().row;\n\n        const root = sheet.getRoot(),\n              index = root.rows.indexOf(rule);\n\n        if (index === -1) {\n          return;\n        }\n\n        return modeling.addRow({ type: 'dmn:DecisionRule' }, index + 1);\n      },\n      removeRule(context) {\n        let rule = context && context.rule;\n\n        if (!rule && !selection.hasSelection()) {\n          return;\n        }\n\n        rule = rule || selection.get().row;\n\n        modeling.removeRow(rule);\n      },\n      addInput() {\n        const root = sheet.getRoot(),\n              businessObject = root.businessObject;\n\n        const { input } = businessObject;\n\n        return modeling.addCol({\n          type: 'dmn:InputClause'\n        }, input ? input.length : 0);\n      },\n      addInputLeft(context) {\n        let input = context && context.input;\n\n        if (!input && !selection.hasSelection()) {\n          return;\n        }\n\n        input = input || selection.get().col;\n\n        const root = sheet.getRoot(),\n              index = root.cols.indexOf(input);\n\n        if (index === -1) {\n          return;\n        }\n\n        return modeling.addCol({ type: 'dmn:InputClause' }, index);\n      },\n      addInputRight(context) {\n        let input = context && context.input;\n\n        if (!input && !selection.hasSelection()) {\n          return;\n        }\n\n        input = input || selection.get().col;\n\n        const root = sheet.getRoot(),\n              index = root.cols.indexOf(input);\n\n        if (index === -1) {\n          return;\n        }\n\n        return modeling.addCol({ type: 'dmn:InputClause' }, index + 1);\n      },\n      removeInput(context) {\n        let input = context && context.input;\n\n        if (!input && !selection.hasSelection()) {\n          return;\n        }\n\n        input = input || selection.get().col;\n\n        modeling.removeCol(input);\n      },\n      addOutput() {\n        const root = sheet.getRoot(),\n              businessObject = root.businessObject;\n\n        const input = businessObject.get('input'),\n              output = businessObject.get('output');\n\n        return modeling.addCol(\n          { type: 'dmn:OutputClause' },\n          input.length + output.length\n        );\n      },\n      addOutputLeft(context) {\n        let output = context && context.output;\n\n        if (!output && !selection.hasSelection()) {\n          return;\n        }\n\n        output = output || selection.get().col;\n\n        const root = sheet.getRoot(),\n              index = root.cols.indexOf(output);\n\n        if (index === -1) {\n          return;\n        }\n\n        return modeling.addCol({ type: 'dmn:OutputClause' }, index);\n      },\n      addOutputRight(context) {\n        let output = context && context.output;\n\n        if (!output && !selection.hasSelection()) {\n          return;\n        }\n\n        output = output || selection.get().col;\n\n        const root = sheet.getRoot(),\n              index = root.cols.indexOf(output);\n\n        if (index === -1) {\n          return;\n        }\n\n        return modeling.addCol({ type: 'dmn:OutputClause' }, index + 1);\n      },\n      removeOutput(context) {\n        let output = context && context.output;\n\n        if (!output && !selection.hasSelection()) {\n          return;\n        }\n\n        output = output || selection.get().col;\n\n        modeling.removeCol(output);\n      },\n      addClause() {\n        if (!selection.hasSelection()) {\n          return;\n        }\n\n        const clause = selection.get().col;\n\n        if (is(clause, 'dmn:InputClause')) {\n          return actions.addInput({ input: clause });\n        } else if (is(clause, 'dmn:OutputClause')) {\n          return actions.addOutput({ output: clause });\n        }\n      },\n      addClauseLeft() {\n        if (!selection.hasSelection()) {\n          return;\n        }\n\n        const clause = selection.get().col;\n\n        if (is(clause, 'dmn:InputClause')) {\n          return actions.addInputLeft({ input: clause });\n        } else if (is(clause, 'dmn:OutputClause')) {\n          return actions.addOutputLeft({ output: clause });\n        }\n      },\n      addClauseRight() {\n        if (!selection.hasSelection()) {\n          return;\n        }\n\n        const clause = selection.get().col;\n\n        if (is(clause, 'dmn:InputClause')) {\n          return actions.addInputRight({ input: clause });\n        } else if (is(clause, 'dmn:OutputClause')) {\n          return actions.addOutputRight({ output: clause });\n        }\n      },\n      removeClause() {\n        if (!selection.hasSelection()) {\n          return;\n        }\n\n        const clause = selection.get().col;\n\n        if (is(clause, 'dmn:InputClause')) {\n          return actions.removeInput({ input: clause });\n        } else if (is(clause, 'dmn:OutputClause')) {\n          return actions.removeOutput({ output: clause });\n        }\n      },\n      selectCellAbove() {\n        return cellSelection.selectCell('above');\n      },\n      selectCellBelow() {\n        return cellSelection.selectCell('below');\n      },\n      copy({ element }) {\n        copyCutPaste.copy(element);\n      },\n      cut({ element }) {\n        copyCutPaste.cut(element);\n      },\n      pasteBefore({ element }) {\n        return copyCutPaste.pasteBefore(element);\n      },\n      pasteAfter({ element }) {\n        return copyCutPaste.pasteAfter(element);\n      }\n    };\n\n    editorActions.register(actions);\n  }\n}\n\nDecisionTableEditorActions.$inject = [\n  'copyCutPaste',\n  'editorActions',\n  'modeling',\n  'selection',\n  'cellSelection',\n  'sheet'\n];"],"file":"DecisionTableEditorActions.js"}