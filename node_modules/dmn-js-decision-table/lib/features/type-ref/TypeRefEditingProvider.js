function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

import TypeRefCellContextMenu from './components/TypeRefCellContextMenu';
var LOW_PRIORITY = 750;

var TypeRef = /*#__PURE__*/_createClass(function TypeRef(components) {
  _classCallCheck(this, TypeRef);

  components.onGetComponent('context-menu', LOW_PRIORITY, function () {
    var context = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    var contextMenuType = context.contextMenuType;

    if (contextMenuType === 'input-edit' || contextMenuType === 'output-edit') {
      return TypeRefCellContextMenu;
    }
  });
});

export { TypeRef as default };
TypeRef.$inject = ['components'];
//# sourceMappingURL=TypeRefEditingProvider.js.map