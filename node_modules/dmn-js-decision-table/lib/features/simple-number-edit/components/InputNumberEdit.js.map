{"version":3,"sources":["../../../../src/features/simple-number-edit/components/InputNumberEdit.js"],"names":["Component","Input","InputSelect","getComparisonString","getRangeString","parseString","COMPARISON","RANGE","InputNumberEdit","props","context","_modeling","injector","get","element","parsedString","businessObject","text","state","type","comparisonOperator","operator","comparisonValue","value","rangeStartValue","values","rangeEndValue","rangeStartType","start","rangeEndType","end","debounceInput","debouncedEditCell","editCell","bind","onComparisonOperatorChange","onComparisonValueChange","onTypeChange","onRangeStartTypeChange","onRangeStartValueChange","onRangeEndTypeChange","onRangeEndValueChange","cell","setState","comparisonOperatorOptions","label","rangeTypeOptions","typeOptions","renderComparison","renderRange"],"mappings":"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","sourcesContent":["import { Component } from 'inferno';\r\n\r\nimport Input from 'dmn-js-shared/lib/components/Input';\r\nimport InputSelect from 'dmn-js-shared/lib/components/InputSelect';\r\n\r\nimport {\r\n  getComparisonString,\r\n  getRangeString,\r\n  parseString\r\n} from '../Utils';\r\n\r\nconst COMPARISON = 'comparison',\r\n      RANGE = 'range';\r\n\r\n\r\nexport default class InputNumberEdit extends Component {\r\n  constructor(props, context) {\r\n    super(props, context);\r\n\r\n    this._modeling = context.injector.get('modeling');\r\n\r\n    const { element } = this.props.context;\r\n\r\n    const parsedString = parseString(element.businessObject.text);\r\n\r\n    if (parsedString) {\r\n      this.state = {\r\n        type: parsedString.type,\r\n        comparisonOperator: parsedString.operator || 'equals',\r\n        comparisonValue: parsedString.value || 0,\r\n        rangeStartValue: parsedString.values ? parsedString.values[0] : 0,\r\n        rangeEndValue: parsedString.values ? parsedString.values[1] : 0,\r\n        rangeStartType: parsedString.start || 'include',\r\n        rangeEndType: parsedString.end || 'include'\r\n      };\r\n    } else {\r\n      this.state = {\r\n        type: COMPARISON,\r\n        comparisonOperator: 'equals',\r\n        comparisonValue: 0,\r\n        rangeStartValue: 0,\r\n        rangeEndValue: 0,\r\n        rangeStartType: 'include',\r\n        rangeEndType: 'include'\r\n      };\r\n    }\r\n\r\n    const debounceInput = context.injector.get('debounceInput');\r\n\r\n    this.debouncedEditCell = debounceInput(this.editCell.bind(this));\r\n    this.editCell = this.editCell.bind(this);\r\n\r\n    this.onComparisonOperatorChange = this.onComparisonOperatorChange.bind(this);\r\n    this.onComparisonValueChange = this.onComparisonValueChange.bind(this);\r\n    this.onTypeChange = this.onTypeChange.bind(this);\r\n    this.onRangeStartTypeChange = this.onRangeStartTypeChange.bind(this);\r\n    this.onRangeStartValueChange = this.onRangeStartValueChange.bind(this);\r\n    this.onRangeEndTypeChange = this.onRangeEndTypeChange.bind(this);\r\n    this.onRangeEndValueChange = this.onRangeEndValueChange.bind(this);\r\n  }\r\n\r\n  editCell(cell, text) {\r\n    this._modeling.editCell(cell, text);\r\n  }\r\n\r\n  onTypeChange(value) {\r\n    const { element } = this.props.context;\r\n\r\n    const {\r\n      comparisonOperator,\r\n      comparisonValue,\r\n      rangeStartValue,\r\n      rangeEndValue,\r\n      rangeStartType,\r\n      rangeEndType\r\n    } = this.state;\r\n\r\n    if (value === COMPARISON) {\r\n      this.editCell(\r\n        element.businessObject,\r\n        getComparisonString(comparisonOperator, comparisonValue)\r\n      );\r\n    } else {\r\n      this.editCell(\r\n        element.businessObject,\r\n        getRangeString(rangeStartValue, rangeEndValue, rangeStartType, rangeEndType)\r\n      );\r\n    }\r\n\r\n    this.setState({\r\n      type: value\r\n    });\r\n  }\r\n\r\n  onComparisonOperatorChange(value) {\r\n    const { element } = this.props.context;\r\n\r\n    const { type, comparisonValue } = this.state;\r\n\r\n    if (type === COMPARISON) {\r\n      this.editCell(element.businessObject, getComparisonString(value, comparisonValue));\r\n\r\n      this.setState({\r\n        comparisonOperator: value\r\n      });\r\n    }\r\n  }\r\n\r\n  onComparisonValueChange(comparisonValue) {\r\n    const { element } = this.props.context;\r\n\r\n    const { type, comparisonOperator } = this.state;\r\n\r\n    if (type === COMPARISON) {\r\n      this.debouncedEditCell(\r\n        element.businessObject,\r\n        getComparisonString(comparisonOperator, comparisonValue)\r\n      );\r\n\r\n      this.setState({\r\n        comparisonValue\r\n      });\r\n    }\r\n  }\r\n\r\n  onRangeStartTypeChange(value) {\r\n    const { element } = this.props.context;\r\n\r\n    const { type, rangeStartValue, rangeEndValue, rangeEndType } = this.state;\r\n\r\n    if (type === RANGE) {\r\n      this.editCell(\r\n        element.businessObject,\r\n        getRangeString(rangeStartValue, rangeEndValue, value, rangeEndType)\r\n      );\r\n\r\n      this.setState({\r\n        rangeStartType: value\r\n      });\r\n    }\r\n  }\r\n\r\n  onRangeStartValueChange(value) {\r\n    const { element } = this.props.context;\r\n\r\n    const { type, rangeEndValue, rangeStartType, rangeEndType } = this.state;\r\n\r\n    if (type === RANGE) {\r\n      this.editCell(\r\n        element.businessObject,\r\n        getRangeString(value, rangeEndValue, rangeStartType, rangeEndType)\r\n      );\r\n\r\n      this.setState({\r\n        rangeStartValue: value\r\n      });\r\n    }\r\n  }\r\n\r\n  onRangeEndTypeChange(value) {\r\n    const { element } = this.props.context;\r\n\r\n    const { type, rangeStartValue, rangeEndValue, rangeStartType } = this.state;\r\n\r\n    if (type === RANGE) {\r\n      this.editCell(\r\n        element.businessObject,\r\n        getRangeString(rangeStartValue, rangeEndValue, rangeStartType, value)\r\n      );\r\n\r\n      this.setState({\r\n        rangeEndType: value\r\n      });\r\n    }\r\n  }\r\n\r\n  onRangeEndValueChange(value) {\r\n    const { element } = this.props.context;\r\n\r\n    const { type, rangeStartValue, rangeStartType, rangeEndType } = this.state;\r\n\r\n    if (type === RANGE) {\r\n      this.editCell(\r\n        element.businessObject,\r\n        getRangeString(rangeStartValue, value, rangeStartType, rangeEndType)\r\n      );\r\n\r\n      this.setState({\r\n        rangeEndValue: value\r\n      });\r\n    }\r\n  }\r\n\r\n  renderComparison(comparisonOperator, comparisonValue) {\r\n    const comparisonOperatorOptions = [{\r\n      label: 'Equals',\r\n      value: 'equals'\r\n    }, {\r\n      label: 'Less',\r\n      value: 'less'\r\n    }, {\r\n      label: 'Less or equals',\r\n      value: 'lessEquals'\r\n    }, {\r\n      label: 'Greater',\r\n      value: 'greater'\r\n    }, {\r\n      label: 'Greater or equals',\r\n      value: 'greaterEquals'\r\n    }];\r\n\r\n    return (\r\n      <div className=\"comparison\">\r\n\r\n        <h4 className=\"dms-heading\">Value</h4>\r\n\r\n        <div className=\"dms-fill-row\">\r\n          <InputSelect\r\n            noInput={ true }\r\n            onChange={ this.onComparisonOperatorChange }\r\n            options={ comparisonOperatorOptions }\r\n            value={ comparisonOperator } />\r\n\r\n          &nbsp;\r\n\r\n          <Input\r\n            className=\"comparison-number-input\"\r\n            onInput={ this.onComparisonValueChange }\r\n            type=\"number\"\r\n            value={ comparisonValue } />\r\n        </div>\r\n\r\n      </div>\r\n    );\r\n  }\r\n\r\n  renderRange(rangeStartValue, rangeEndValue, rangeStartType, rangeEndType) {\r\n    const rangeTypeOptions = [{\r\n      label: 'Include',\r\n      value: 'include'\r\n    }, {\r\n      label: 'Exclude',\r\n      value: 'exclude'\r\n    }];\r\n\r\n    return (\r\n      <div className=\"range\">\r\n        <h4 className=\"dms-heading\">Start Value</h4>\r\n\r\n        <div className=\"dms-fill-row\">\r\n          <InputSelect\r\n            noInput={ true }\r\n            onChange={ this.onRangeStartTypeChange }\r\n            options={ rangeTypeOptions }\r\n            value={ rangeStartType } />\r\n\r\n          &nbsp;\r\n\r\n          <Input\r\n            className=\"range-start-number-input\"\r\n            onInput={ this.onRangeStartValueChange }\r\n            type=\"number\"\r\n            value={ rangeStartValue } />\r\n        </div>\r\n\r\n        <h4 className=\"dms-heading\">\r\n          End Value\r\n        </h4>\r\n\r\n        <div className=\"dms-fill-row\">\r\n          <InputSelect\r\n            noInput={ true }\r\n            onChange={ this.onRangeEndTypeChange }\r\n            options={ rangeTypeOptions }\r\n            value={ rangeEndType } />\r\n\r\n          &nbsp;\r\n\r\n          <Input\r\n            className=\"range-end-number-input\"\r\n            onInput={ this.onRangeEndValueChange }\r\n            type=\"number\"\r\n            value={ rangeEndValue } />\r\n        </div>\r\n\r\n      </div>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      type,\r\n      comparisonOperator,\r\n      comparisonValue,\r\n      rangeStartValue,\r\n      rangeEndValue,\r\n      rangeStartType,\r\n      rangeEndType\r\n    } = this.state;\r\n\r\n    const typeOptions = [{\r\n      label: 'Comparison',\r\n      value: COMPARISON\r\n    }, {\r\n      label: 'Range',\r\n      value: RANGE\r\n    }];\r\n\r\n    return (\r\n      <div class=\"context-menu-container simple-number-edit\">\r\n\r\n        <h3 class=\"dms-heading\">Edit Number</h3>\r\n\r\n        <div className=\"dms-fill-row\">\r\n          <InputSelect\r\n            noInput={ true }\r\n            onChange={ this.onTypeChange }\r\n            options={ typeOptions }\r\n            value={ type } />\r\n        </div>\r\n\r\n        {\r\n          type === COMPARISON\r\n            && this.renderComparison(comparisonOperator, comparisonValue)\r\n        }\r\n\r\n        {\r\n          type === RANGE\r\n            && this.renderRange(\r\n              rangeStartValue,\r\n              rangeEndValue,\r\n              rangeStartType,\r\n              rangeEndType\r\n            )\r\n        }\r\n\r\n      </div>\r\n    );\r\n  }\r\n}"],"file":"InputNumberEdit.js"}