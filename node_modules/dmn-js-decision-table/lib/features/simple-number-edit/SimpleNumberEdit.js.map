{"version":3,"sources":["../../../src/features/simple-number-edit/SimpleNumberEdit.js"],"names":["InputNumberEdit","OutputNumberEdit","isInput","isOutput","SimpleNumberEdit","components","simpleMode","registerProvider","element","typeRef","getTypeRef","col","isNumber","onGetComponent","context","contextMenuType","$inject","businessObject","inputExpression","numberTypes","includes"],"mappings":";;;;;;AAAA,OAAOA,eAAP,MAA4B,8BAA5B;AACA,OAAOC,gBAAP,MAA6B,+BAA7B;AAEA,SAASC,OAAT,EAAkBC,QAAlB,QAAkC,kCAAlC;;IAEqBC,gB,6BACnB,0BAAYC,UAAZ,EAAwBC,UAAxB,EAAoC;AAAA;;AAClCA,EAAAA,UAAU,CAACC,gBAAX,CAA4B,UAAAC,OAAO,EAAI;AACrC,QAAMC,OAAO,GAAGC,UAAU,CAACF,OAAD,CAA1B;AAEA,WAAO,CAACN,OAAO,CAACM,OAAO,CAACG,GAAT,CAAP,IAAwBR,QAAQ,CAACK,OAAO,CAACG,GAAT,CAAjC,KACFC,QAAQ,CAACH,OAAD,CADb;AAED,GALD;AAOAJ,EAAAA,UAAU,CAACQ,cAAX,CAA0B,cAA1B,EAA0C,YAAkB;AAAA,QAAjBC,OAAiB,uEAAP,EAAO;;AAC1D,QAAIA,OAAO,CAACC,eAAR,IAA2BD,OAAO,CAACC,eAAR,KAA4B,kBAA3D,EAA+E;AAE7E,UAAI,CAACD,OAAO,CAACN,OAAb,EAAsB;AACpB;AACD;;AAED,UAAMC,OAAO,GAAGC,UAAU,CAACI,OAAO,CAACN,OAAT,CAA1B;;AAEA,UAAII,QAAQ,CAACH,OAAD,CAAZ,EAAuB;AAErB,YAAIP,OAAO,CAACY,OAAO,CAACN,OAAR,CAAgBG,GAAjB,CAAX,EAAkC;AAChC,iBAAOX,eAAP;AACD,SAFD,MAEO,IAAIG,QAAQ,CAACW,OAAO,CAACN,OAAR,CAAgBG,GAAjB,CAAZ,EAAmC;AACxC,iBAAOV,gBAAP;AACD;AAEF;AAEF;AACF,GApBD;AAqBD,C;;SA9BkBG,gB;AAiCrBA,gBAAgB,CAACY,OAAjB,GAA2B,CAAE,YAAF,EAAgB,YAAhB,CAA3B,C,CAGA;;AAEA,SAASN,UAAT,CAAoBF,OAApB,EAA6B;AAC3B,MAAIN,OAAO,CAACM,OAAO,CAACG,GAAT,CAAX,EAA0B;AACxB,WAAOH,OAAO,CAACG,GAAR,IAAeH,OAAO,CAACG,GAAR,CAAYM,cAAZ,CAA2BC,eAA3B,CAA2CT,OAAjE;AACD,GAFD,MAEO;AACL,WAAOD,OAAO,CAACG,GAAR,IAAeH,OAAO,CAACG,GAAR,CAAYM,cAAZ,CAA2BR,OAAjD;AACD;AACF;;AAED,IAAMU,WAAW,GAAG,CAClB,QADkB,EAElB,SAFkB,EAGlB,MAHkB,EAIlB,QAJkB,CAApB;;AAOA,SAASP,QAAT,CAAkBH,OAAlB,EAA2B;AACzB,SAAOU,WAAW,CAACC,QAAZ,CAAqBX,OAArB,CAAP;AACD","sourcesContent":["import InputNumberEdit from './components/InputNumberEdit';\r\nimport OutputNumberEdit from './components/OutputNumberEdit';\r\n\r\nimport { isInput, isOutput } from 'dmn-js-shared/lib/util/ModelUtil';\r\n\r\nexport default class SimpleNumberEdit {\r\n  constructor(components, simpleMode) {\r\n    simpleMode.registerProvider(element => {\r\n      const typeRef = getTypeRef(element);\r\n\r\n      return (isInput(element.col) || isOutput(element.col))\r\n        && isNumber(typeRef);\r\n    });\r\n\r\n    components.onGetComponent('context-menu', (context = {}) => {\r\n      if (context.contextMenuType && context.contextMenuType === 'simple-mode-edit') {\r\n\r\n        if (!context.element) {\r\n          return;\r\n        }\r\n\r\n        const typeRef = getTypeRef(context.element);\r\n\r\n        if (isNumber(typeRef)) {\r\n\r\n          if (isInput(context.element.col)) {\r\n            return InputNumberEdit;\r\n          } else if (isOutput(context.element.col)) {\r\n            return OutputNumberEdit;\r\n          }\r\n\r\n        }\r\n\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nSimpleNumberEdit.$inject = [ 'components', 'simpleMode' ];\r\n\r\n\r\n// helpers //////////////////////\r\n\r\nfunction getTypeRef(element) {\r\n  if (isInput(element.col)) {\r\n    return element.col && element.col.businessObject.inputExpression.typeRef;\r\n  } else {\r\n    return element.col && element.col.businessObject.typeRef;\r\n  }\r\n}\r\n\r\nconst numberTypes = [\r\n  'number',\r\n  'integer',\r\n  'long',\r\n  'double'\r\n];\r\n\r\nfunction isNumber(typeRef) {\r\n  return numberTypes.includes(typeRef);\r\n}\r\n"],"file":"SimpleNumberEdit.js"}