{"version":3,"sources":["../../../../src/features/modeling/behavior/IdUnclaimBehavior.js"],"names":["CommandInterceptor","isArray","IdUnclaimBehavior","eventBus","modeling","_modeling","preExecute","event","context","element","row","col","unclaimId","businessObject","cells","forEach","cell","id","$descriptor","properties","property","value","name","v","$type","$inject"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,kBAAP,MAA+B,2CAA/B;AAEA,SAASC,OAAT,QAAwB,UAAxB;;IAGqBC,iB;;;;;AAEnB,6BAAYC,QAAZ,EAAsBC,QAAtB,EAAgC;AAAA;;AAAA;;AAC9B,8BAAMD,QAAN;AAEA,UAAKE,SAAL,GAAiBD,QAAjB;;AAEA,UAAKE,UAAL,CAAgB,CAAE,YAAF,EAAgB,YAAhB,CAAhB,EAAgD,UAAAC,KAAK,EAAI;AACvD,UAAMC,OAAO,GAAGD,KAAK,CAACC,OAAtB;AAAA,UACMC,OAAO,GAAGD,OAAO,CAACE,GAAR,IAAeF,OAAO,CAACG,GADvC;;AAGA,YAAKC,SAAL,CAAeH,OAAO,CAACI,cAAvB;;AAEA,UAAIJ,OAAO,CAACK,KAAZ,EAAmB;AACjBL,QAAAA,OAAO,CAACK,KAAR,CAAcC,OAAd,CAAsB,UAAAC,IAAI;AAAA,iBAAI,MAAKJ,SAAL,CAAeI,IAAI,CAACH,cAApB,CAAJ;AAAA,SAA1B;AACD;AACF,KATD;;AAL8B;AAe/B;;;;WAED,mBAAUA,cAAV,EAA0B;AAAA;;AAExB,UAAIA,cAAc,CAACI,EAAnB,EAAuB;AACrB,aAAKZ,SAAL,CAAeO,SAAf,CAAyBC,cAAc,CAACI,EAAxC,EAA4CJ,cAA5C;AACD;;AAEDA,MAAAA,cAAc,CAACK,WAAf,CAA2BC,UAA3B,CAAsCJ,OAAtC,CAA8C,UAAAK,QAAQ,EAAI;AACxD,YAAMC,KAAK,GAAGR,cAAc,CAACO,QAAQ,CAACE,IAAV,CAA5B,CADwD,CAGxD;;AACA,YAAI,CAACD,KAAL,EAAY;AACV;AACD,SANuD,CAQxD;;;AACA,YAAIpB,OAAO,CAACoB,KAAD,CAAX,EAAoB;AAClBA,UAAAA,KAAK,CAACN,OAAN,CAAc,UAAAQ,CAAC;AAAA,mBAAI,MAAI,CAACX,SAAL,CAAeW,CAAf,CAAJ;AAAA,WAAf;AACD,SAXuD,CAaxD;;;AACA,YAAIF,KAAK,CAACG,KAAV,EAAiB;AACf,UAAA,MAAI,CAACZ,SAAL,CAAeS,KAAf;AACD;AACF,OAjBD;AAmBD;;;;EA5C4CrB,kB;;SAA1BE,iB;AA+CrBA,iBAAiB,CAACuB,OAAlB,GAA4B,CAAE,UAAF,EAAc,UAAd,CAA5B","sourcesContent":["import CommandInterceptor from 'diagram-js/lib/command/CommandInterceptor';\r\n\r\nimport { isArray } from 'min-dash';\r\n\r\n\r\nexport default class IdUnclaimBehavior extends CommandInterceptor {\r\n\r\n  constructor(eventBus, modeling) {\r\n    super(eventBus);\r\n\r\n    this._modeling = modeling;\r\n\r\n    this.preExecute([ 'row.remove', 'col.remove' ], event => {\r\n      const context = event.context,\r\n            element = context.row || context.col;\r\n\r\n      this.unclaimId(element.businessObject);\r\n\r\n      if (element.cells) {\r\n        element.cells.forEach(cell => this.unclaimId(cell.businessObject));\r\n      }\r\n    });\r\n  }\r\n\r\n  unclaimId(businessObject) {\r\n\r\n    if (businessObject.id) {\r\n      this._modeling.unclaimId(businessObject.id, businessObject);\r\n    }\r\n\r\n    businessObject.$descriptor.properties.forEach(property => {\r\n      const value = businessObject[property.name];\r\n\r\n      // not set\r\n      if (!value) {\r\n        return;\r\n      }\r\n\r\n      // array of moddle elements\r\n      if (isArray(value)) {\r\n        value.forEach(v => this.unclaimId(v));\r\n      }\r\n\r\n      // moddle element\r\n      if (value.$type) {\r\n        this.unclaimId(value);\r\n      }\r\n    });\r\n\r\n  }\r\n}\r\n\r\nIdUnclaimBehavior.$inject = [ 'eventBus', 'modeling' ];"],"file":"IdUnclaimBehavior.js"}