{"version":3,"sources":["../../../../../src/features/hit-policy/editor/components/EditableHitPolicy.js"],"names":["Component","find","InputSelect","inject","HIT_POLICIES","EditableHitPolicy","props","context","aggregation","hitPolicy","modeling","editHitPolicy","forceUpdate","changeSupport","onElementsChanged","getRoot","id","offElementsChanged","sheet","root","businessObject","hitPolicyEntry","entry","isEqualHitPolicy","value","onChange","explanation","$inject","a","b"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,SAASA,SAAT,QAA0B,SAA1B;AAEA,SAASC,IAAT,QAAqB,UAArB;AAEA,OAAOC,WAAP,MAAwB,0CAAxB;AAEA,SACEC,MADF,QAEO,yBAFP;AAIA,SAASC,YAAT,QAA6B,qBAA7B;;IAGqBC,iB;;;;;AAEnB,6BAAYC,KAAZ,EAAmBC,OAAnB,EAA4B;AAAA;;AAAA;;AAC1B,8BAAMD,KAAN,EAAaC,OAAb;;AAD0B,+DAMjB,gBAAgC;AAAA,UAA7BC,WAA6B,QAA7BA,WAA6B;AAAA,UAAhBC,SAAgB,QAAhBA,SAAgB;;AACzC,YAAKC,QAAL,CAAcC,aAAd,CAA4BF,SAA5B,EAAuCD,WAAvC;AACD,KAR2B;;AAAA,wEAUR,YAAM;AACxB,YAAKI,WAAL;AACD,KAZ2B;;AAG1BT,IAAAA,MAAM,+BAAN;AAH0B;AAI3B;;;;WAUD,6BAAoB;AAClB,WAAKU,aAAL,CAAmBC,iBAAnB,CAAqC,KAAKC,OAAL,GAAeC,EAApD,EAAwD,KAAKF,iBAA7D;AACD;;;WAED,gCAAuB;AACrB,WAAKD,aAAL,CAAmBI,kBAAnB,CAAsC,KAAKF,OAAL,GAAeC,EAArD,EAAyD,KAAKF,iBAA9D;AACD;;;WAED,mBAAU;AACR,aAAO,KAAKI,KAAL,CAAWH,OAAX,EAAP;AACD;;;WAED,kBAAS;AACP,UAAMI,IAAI,GAAG,KAAKJ,OAAL,EAAb;AAAA,UACMK,cAAc,GAAGD,IAAI,CAACC,cAD5B;AAGA,UAAQZ,WAAR,GAAmCY,cAAnC,CAAQZ,WAAR;AAAA,UAAqBC,SAArB,GAAmCW,cAAnC,CAAqBX,SAArB;AAEA,UAAMY,cAAc,GAAGpB,IAAI,CAACG,YAAD,EAAe,UAAAkB,KAAK,EAAI;AACjD,eAAOC,gBAAgB,CAACD,KAAK,CAACE,KAAP,EAAc;AAAEhB,UAAAA,WAAW,EAAXA,WAAF;AAAeC,UAAAA,SAAS,EAATA;AAAf,SAAd,CAAvB;AACD,OAF0B,CAA3B;AAIA,mCACiB,YADjB,2BAEqB,WAFrB;AAAA,qBAMgB,+BANhB;AAAA,oBAOiB,KAAKgB,QAPtB;AAAA,mBAQgBrB,YARhB;AAAA,iBASciB,cAAc,CAACG,KAT7B;AAAA,2BAUsB,MAVtB;AAAA;AAAA;AAAA,iBACsCH,cAAc,CAACK;AADrD;AAeD;;;;EArD4C1B,S;;SAA1BK,iB;AAwDrBA,iBAAiB,CAACsB,OAAlB,GAA4B,CAC1B,eAD0B,EAE1B,OAF0B,EAG1B,UAH0B,CAA5B,C,CAOA;;AACA,SAASJ,gBAAT,CAA0BK,CAA1B,EAA6BC,CAA7B,EAAgC;AAC9B,SAAOD,CAAC,CAACnB,SAAF,KAAgBoB,CAAC,CAACpB,SAAlB,IAA+BmB,CAAC,CAACpB,WAAF,KAAkBqB,CAAC,CAACrB,WAA1D;AACD","sourcesContent":["import { Component } from 'inferno';\n\nimport { find } from 'min-dash';\n\nimport InputSelect from 'dmn-js-shared/lib/components/InputSelect';\n\nimport {\n  inject\n} from 'table-js/lib/components';\n\nimport { HIT_POLICIES } from './../../HitPolicies';\n\n\nexport default class EditableHitPolicy extends Component {\n\n  constructor(props, context) {\n    super(props, context);\n\n    inject(this);\n  }\n\n  onChange = ({ aggregation, hitPolicy }) => {\n    this.modeling.editHitPolicy(hitPolicy, aggregation);\n  }\n\n  onElementsChanged = () => {\n    this.forceUpdate();\n  }\n\n  componentDidMount() {\n    this.changeSupport.onElementsChanged(this.getRoot().id, this.onElementsChanged);\n  }\n\n  componentWillUnmount() {\n    this.changeSupport.offElementsChanged(this.getRoot().id, this.onElementsChanged);\n  }\n\n  getRoot() {\n    return this.sheet.getRoot();\n  }\n\n  render() {\n    const root = this.getRoot(),\n          businessObject = root.businessObject;\n\n    const { aggregation, hitPolicy } = businessObject;\n\n    const hitPolicyEntry = find(HIT_POLICIES, entry => {\n      return isEqualHitPolicy(entry.value, { aggregation, hitPolicy });\n    });\n\n    return (\n      <div className=\"hit-policy\" title={ hitPolicyEntry.explanation }>\n        <label className=\"dms-label\">\n          Hit Policy:\n        </label>\n        <InputSelect\n          className=\"hit-policy-edit-policy-select\"\n          onChange={ this.onChange }\n          options={ HIT_POLICIES }\n          value={ hitPolicyEntry.value }\n          data-hit-policy=\"true\"\n          noInput\n        />\n      </div>\n    );\n  }\n}\n\nEditableHitPolicy.$inject = [\n  'changeSupport',\n  'sheet',\n  'modeling'\n];\n\n\n// helpers //////////////////////\nfunction isEqualHitPolicy(a, b) {\n  return a.hitPolicy === b.hitPolicy && a.aggregation === b.aggregation;\n}\n"],"file":"EditableHitPolicy.js"}