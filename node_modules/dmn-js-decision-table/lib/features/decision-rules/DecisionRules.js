function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

import DecisionRulesBodyComponent from './components/DecisionRulesBodyComponent';
import DecisionRulesRowComponent from './components/DecisionRulesRowComponent';
import DecisionRulesCellComponent from './components/DecisionRulesCellComponent';

var Rules = /*#__PURE__*/_createClass(function Rules(components) {
  _classCallCheck(this, Rules);

  components.onGetComponent('table.body', function () {
    return DecisionRulesBodyComponent;
  });
  components.onGetComponent('row', function (_ref) {
    var rowType = _ref.rowType;

    if (rowType === 'rule') {
      return DecisionRulesRowComponent;
    }
  });
  components.onGetComponent('cell', function (_ref2) {
    var cellType = _ref2.cellType;

    if (cellType === 'rule') {
      return DecisionRulesCellComponent;
    }
  });
});

export { Rules as default };
Rules.$inject = ['components'];
//# sourceMappingURL=DecisionRules.js.map