{"version":3,"sources":["../../../../src/features/description/components/DescriptionEditor.js"],"names":["Component","isString","query","domQuery","EditableComponent","DescriptionEditor","props","context","forceUpdate","value","_modeling","updateProperties","_element","description","_elementRegistry","injector","get","_changeSupport","changeSupport","id","onElementsChanged","autoFocus","node","editor","getEditor","focus","offElementsChanged","businessObject","length","changeDescription","Editor","getClassName","container"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,SAASA,SAAT,QAA0B,SAA1B;AAEA,SAASC,QAAT,QAAyB,UAAzB;AAEA,SAASC,KAAK,IAAIC,QAAlB,QAAkC,SAAlC;AAEA,OAAOC,iBAAP,MAA8B,gDAA9B;;IAEqBC,iB;;;;;AACnB,6BAAYC,KAAZ,EAAmBC,OAAnB,EAA4B;AAAA;;AAAA;;AAC1B,8BAAMD,KAAN,EAAaC,OAAb;;AAD0B,wEAaR,YAAM;AACxB,YAAKC,WAAL;AACD,KAf2B;;AAAA,wEAgDR,UAACC,KAAD,EAAW;AAC7B,YAAKC,SAAL,CAAeC,gBAAf,CAAgC,MAAKC,QAArC,EAA+C;AAC7CC,QAAAA,WAAW,EAAEJ;AADgC,OAA/C;AAGD,KApD2B;;AAG1B,UAAKK,gBAAL,GAAwBP,OAAO,CAACQ,QAAR,CAAiBC,GAAjB,CAAqB,iBAArB,CAAxB;AACA,UAAKN,SAAL,GAAiBH,OAAO,CAACQ,QAAR,CAAiBC,GAAjB,CAAqB,UAArB,CAAjB;AAEA,UAAKC,cAAL,GAAsB,MAAKV,OAAL,CAAaW,aAAnC;AAEA,QAAQC,EAAR,GAAe,MAAKb,KAAL,CAAWC,OAA1B,CAAQY,EAAR;AAEA,UAAKP,QAAL,GAAgB,MAAKE,gBAAL,CAAsBE,GAAtB,CAA0BG,EAA1B,CAAhB;AAV0B;AAW3B;;;;WAMD,8BAAqB;AACnB,UAAI,KAAKP,QAAT,EAAmB;AACjB,aAAKK,cAAL,CAAoBG,iBAApB,CAAsC,KAAKR,QAAL,CAAcO,EAApD,EAAwD,KAAKC,iBAA7D;AACD;AACF;;;WAED,6BAAoB;AAClB,UAAQC,SAAR,GAAsB,KAAKf,KAAL,CAAWC,OAAjC,CAAQc,SAAR;;AAEA,UAAIA,SAAS,IAAI,KAAKC,IAAtB,EAA4B;AAC1B,YAAMC,MAAM,GAAGC,SAAS,CAAC,KAAKF,IAAN,CAAxB;AAEAC,QAAAA,MAAM,CAACE,KAAP;AACD;AACF;;;WAED,gCAAuB;AACrB,UAAI,KAAKb,QAAT,EAAmB;AACjB,aAAKK,cAAL,CAAoBS,kBAApB,CAAuC,KAAKd,QAAL,CAAcO,EAArD,EAAyD,KAAKC,iBAA9D;;AAEA,YAAQO,cAAR,GAA2B,KAAKf,QAAhC,CAAQe,cAAR;AAEA,YAAQd,WAAR,GAAwBc,cAAxB,CAAQd,WAAR,CALiB,CAOjB;;AACA,YAAIZ,QAAQ,CAACY,WAAD,CAAR,IAAyB,CAACA,WAAW,CAACe,MAA1C,EAAkD;AAChD,eAAKC,iBAAL,CAAuB,IAAvB;AACD;AACF;AACF;;;WAQD,kBAAS;AAAA;;AACP,UAAI,CAAC,KAAKjB,QAAV,EAAoB;AAClB;AACD;;AAED,UAAQe,cAAR,GAA2B,KAAKf,QAAhC,CAAQe,cAAR;AAEA,UAAQd,WAAR,GAAwBc,cAAxB,CAAQd,WAAR;;AAEA,UAAI,CAACZ,QAAQ,CAACY,WAAD,CAAb,EAA4B;AAC1B;AACD;;AAED,mCAEU,2CAFV;AAAA,qBAKgB,WALhB;AAAA,oBAMiB,KAAKgB,iBANtB;AAAA,iBAOchB;AAPd,yBAGU,UAAAS,IAAI;AAAA,eAAI,MAAI,CAACA,IAAL,GAAYA,IAAhB;AAAA,OAHd;AAUD;;;;EA9E4CtB,S;;SAA1BK,iB;;IAiFfyB,M;;;;;;;;;;;;;WACJ,kBAAS;AACP,mCACmB,KAAKC,YAAL,EADnB,EAGM,KAAKP,SAAL,EAHN;AAOD;;;;EATkBpB,iB,GAYrB;;;AAEA,SAASoB,SAAT,CAAmBQ,SAAnB,EAA8B;AAC5B,SAAO7B,QAAQ,CAAC,mBAAD,EAAsB6B,SAAtB,CAAf;AACD","sourcesContent":["import { Component } from 'inferno';\r\n\r\nimport { isString } from 'min-dash';\r\n\r\nimport { query as domQuery } from 'min-dom';\r\n\r\nimport EditableComponent from 'dmn-js-shared/lib/components/EditableComponent';\r\n\r\nexport default class DescriptionEditor extends Component {\r\n  constructor(props, context) {\r\n    super(props, context);\r\n\r\n    this._elementRegistry = context.injector.get('elementRegistry');\r\n    this._modeling = context.injector.get('modeling');\r\n\r\n    this._changeSupport = this.context.changeSupport;\r\n\r\n    const { id } = this.props.context;\r\n\r\n    this._element = this._elementRegistry.get(id);\r\n  }\r\n\r\n  onElementsChanged = () => {\r\n    this.forceUpdate();\r\n  }\r\n\r\n  componentWillMount() {\r\n    if (this._element) {\r\n      this._changeSupport.onElementsChanged(this._element.id, this.onElementsChanged);\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { autoFocus } = this.props.context;\r\n\r\n    if (autoFocus && this.node) {\r\n      const editor = getEditor(this.node);\r\n\r\n      editor.focus();\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    if (this._element) {\r\n      this._changeSupport.offElementsChanged(this._element.id, this.onElementsChanged);\r\n\r\n      const { businessObject } = this._element;\r\n\r\n      const { description } = businessObject;\r\n\r\n      // if empty description remove description\r\n      if (isString(description) && !description.length) {\r\n        this.changeDescription(null);\r\n      }\r\n    }\r\n  }\r\n\r\n  changeDescription = (value) => {\r\n    this._modeling.updateProperties(this._element, {\r\n      description: value\r\n    });\r\n  }\r\n\r\n  render() {\r\n    if (!this._element) {\r\n      return;\r\n    }\r\n\r\n    const { businessObject } = this._element;\r\n\r\n    const { description } = businessObject;\r\n\r\n    if (!isString(description)) {\r\n      return;\r\n    }\r\n\r\n    return (\r\n      <div\r\n        class=\"context-menu-container description-editor\"\r\n        ref={ node => this.node = node }>\r\n        <Editor\r\n          className=\"dms-input\"\r\n          onChange={ this.changeDescription }\r\n          value={ description } />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass Editor extends EditableComponent {\r\n  render() {\r\n    return (\r\n      <div className={ this.getClassName() }>\r\n        {\r\n          this.getEditor()\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// helpers //////////\r\n\r\nfunction getEditor(container) {\r\n  return domQuery('.content-editable', container);\r\n}"],"file":"DescriptionEditor.js"}