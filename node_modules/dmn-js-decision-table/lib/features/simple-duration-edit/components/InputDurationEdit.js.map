{"version":3,"sources":["../../../../src/features/simple-duration-edit/components/InputDurationEdit.js"],"names":["Component","InputSelect","DurationInput","getComparisonString","getRangeString","parseDuration","COMPARISON","RANGE","InputDurationEdit","props","context","_modeling","injector","get","element","_type","getTypeRef","parsedString","businessObject","text","state","type","comparisonOperator","operator","startValue","values","endValue","rangeStartType","start","rangeEndType","end","debounceInput","debouncedEditCell","editCell","bind","onComparisonOperatorChange","onComparisonValueChange","onTypeChange","onRangeStartTypeChange","onRangeStartValueChange","onRangeEndTypeChange","onRangeEndValueChange","cell","value","setState","comparisonValue","comparisonOperatorOptions","label","rangeStartValue","rangeEndValue","rangeTypeOptions","typeOptions","renderComparison","renderRange","col","inputExpression","typeRef"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA,SAASA,SAAT,QAA0B,SAA1B;AAEA,OAAOC,WAAP,MAAwB,0CAAxB;AAEA,SAASC,aAAT,QAA8B,iBAA9B;AAEA,SACEC,mBADF,EAEEC,cAFF,EAGEC,aAHF,QAIO,UAJP;AAMA,IAAMC,UAAU,GAAG,YAAnB;AAAA,IACMC,KAAK,GAAG,OADd,C,CAGA;;IACqBC,iB;;;;;AACnB,6BAAYC,KAAZ,EAAmBC,OAAnB,EAA4B;AAAA;;AAAA;;AAC1B,8BAAMD,KAAN,EAAaC,OAAb;AAEA,UAAKC,SAAL,GAAiBD,OAAO,CAACE,QAAR,CAAiBC,GAAjB,CAAqB,UAArB,CAAjB;AAEA,QAAQC,OAAR,GAAoB,MAAKL,KAAL,CAAWC,OAA/B,CAAQI,OAAR;AAEA,UAAKC,KAAL,GAAaC,UAAU,CAACF,OAAD,CAAvB;AAEA,QAAMG,YAAY,GAAGZ,aAAa,CAACS,OAAO,CAACI,cAAR,CAAuBC,IAAxB,EAA8B,MAAKJ,KAAnC,CAAlC;;AAEA,QAAIE,YAAJ,EAAkB;AAChB,YAAKG,KAAL,GAAa;AACXC,QAAAA,IAAI,EAAEJ,YAAY,CAACI,IADR;AAEXC,QAAAA,kBAAkB,EAAEL,YAAY,CAACM,QAAb,IAAyB,QAFlC;AAGXC,QAAAA,UAAU,EAAEP,YAAY,CAACQ,MAAb,CAAoB,CAApB,KAA0B,EAH3B;AAIXC,QAAAA,QAAQ,EAAET,YAAY,CAACQ,MAAb,CAAoB,CAApB,KAA0B,EAJzB;AAKXE,QAAAA,cAAc,EAAEV,YAAY,CAACW,KAAb,IAAsB,SAL3B;AAMXC,QAAAA,YAAY,EAAEZ,YAAY,CAACa,GAAb,IAAoB;AANvB,OAAb;AAQD,KATD,MASO;AACL,YAAKV,KAAL,GAAa;AACXC,QAAAA,IAAI,EAAEf,UADK;AAEXgB,QAAAA,kBAAkB,EAAE,QAFT;AAGXE,QAAAA,UAAU,EAAE,EAHD;AAIXE,QAAAA,QAAQ,EAAE,EAJC;AAKXC,QAAAA,cAAc,EAAE,SALL;AAMXE,QAAAA,YAAY,EAAE;AANH,OAAb;AAQD;;AAED,QAAME,aAAa,GAAGrB,OAAO,CAACE,QAAR,CAAiBC,GAAjB,CAAqB,eAArB,CAAtB;AAEA,UAAKmB,iBAAL,GAAyBD,aAAa,CAAC,MAAKE,QAAL,CAAcC,IAAd,+BAAD,CAAtC;AACA,UAAKD,QAAL,GAAgB,MAAKA,QAAL,CAAcC,IAAd,+BAAhB;AAEA,UAAKC,0BAAL,GAAkC,MAAKA,0BAAL,CAAgCD,IAAhC,+BAAlC;AACA,UAAKE,uBAAL,GAA+B,MAAKA,uBAAL,CAA6BF,IAA7B,+BAA/B;AACA,UAAKG,YAAL,GAAoB,MAAKA,YAAL,CAAkBH,IAAlB,+BAApB;AACA,UAAKI,sBAAL,GAA8B,MAAKA,sBAAL,CAA4BJ,IAA5B,+BAA9B;AACA,UAAKK,uBAAL,GAA+B,MAAKA,uBAAL,CAA6BL,IAA7B,+BAA/B;AACA,UAAKM,oBAAL,GAA4B,MAAKA,oBAAL,CAA0BN,IAA1B,+BAA5B;AACA,UAAKO,qBAAL,GAA6B,MAAKA,qBAAL,CAA2BP,IAA3B,+BAA7B;AA1C0B;AA2C3B;;;;WAED,kBAASQ,IAAT,EAAevB,IAAf,EAAqB;AACnB,WAAKR,SAAL,CAAesB,QAAf,CAAwBS,IAAxB,EAA8BvB,IAA9B;AACD;;;WAED,sBAAawB,KAAb,EAAoB;AAClB,UAAQ7B,OAAR,GAAoB,KAAKL,KAAL,CAAWC,OAA/B,CAAQI,OAAR;AAEA,wBAMI,KAAKM,KANT;AAAA,UACEE,kBADF,eACEA,kBADF;AAAA,UAEEE,UAFF,eAEEA,UAFF;AAAA,UAGEE,QAHF,eAGEA,QAHF;AAAA,UAIEC,cAJF,eAIEA,cAJF;AAAA,UAKEE,YALF,eAKEA,YALF;;AAQA,UAAIc,KAAK,KAAKrC,UAAd,EAA0B;AACxB,aAAK2B,QAAL,CACEnB,OAAO,CAACI,cADV,EAEEf,mBAAmB,CAACmB,kBAAD,EAAqBE,UAArB,CAFrB;AAID,OALD,MAKO;AACL,aAAKS,QAAL,CACEnB,OAAO,CAACI,cADV,EAEEd,cAAc,CAACoB,UAAD,EAAaE,QAAb,EAAuBC,cAAvB,EAAuCE,YAAvC,CAFhB;AAID;;AAED,WAAKe,QAAL,CAAc;AACZvB,QAAAA,IAAI,EAAEsB;AADM,OAAd;AAGD;;;WAED,oCAA2BA,KAA3B,EAAkC;AAChC,UAAQ7B,OAAR,GAAoB,KAAKL,KAAL,CAAWC,OAA/B,CAAQI,OAAR;AAEA,yBAA6B,KAAKM,KAAlC;AAAA,UAAQC,IAAR,gBAAQA,IAAR;AAAA,UAAcG,UAAd,gBAAcA,UAAd;;AAEA,UAAIH,IAAI,KAAKf,UAAb,EAAyB;AACvB,aAAK2B,QAAL,CAAcnB,OAAO,CAACI,cAAtB,EAAsCf,mBAAmB,CAACwC,KAAD,EAAQnB,UAAR,CAAzD;AAEA,aAAKoB,QAAL,CAAc;AACZtB,UAAAA,kBAAkB,EAAEqB;AADR,SAAd;AAGD;AACF;;;WAED,iCAAwBE,eAAxB,EAAyC;AACvC,UAAQ/B,OAAR,GAAoB,KAAKL,KAAL,CAAWC,OAA/B,CAAQI,OAAR;AAEA,yBAAqC,KAAKM,KAA1C;AAAA,UAAQC,IAAR,gBAAQA,IAAR;AAAA,UAAcC,kBAAd,gBAAcA,kBAAd;;AAEA,UAAID,IAAI,KAAKf,UAAb,EAAyB;AACvB,aAAK0B,iBAAL,CACElB,OAAO,CAACI,cADV,EAEEf,mBAAmB,CAACmB,kBAAD,EAAqBuB,eAArB,CAFrB;AAKA,aAAKD,QAAL,CAAc;AACZpB,UAAAA,UAAU,EAAEqB;AADA,SAAd;AAGD;AACF;;;WAED,gCAAuBF,KAAvB,EAA8B;AAC5B,UAAQ7B,OAAR,GAAoB,KAAKL,KAAL,CAAWC,OAA/B,CAAQI,OAAR;AAEA,yBAAqD,KAAKM,KAA1D;AAAA,UAAQC,IAAR,gBAAQA,IAAR;AAAA,UAAcG,UAAd,gBAAcA,UAAd;AAAA,UAA0BE,QAA1B,gBAA0BA,QAA1B;AAAA,UAAoCG,YAApC,gBAAoCA,YAApC;;AAEA,UAAIR,IAAI,KAAKd,KAAb,EAAoB;AAClB,aAAK0B,QAAL,CACEnB,OAAO,CAACI,cADV,EAEEd,cAAc,CAACoB,UAAD,EAAaE,QAAb,EAAuBiB,KAAvB,EAA8Bd,YAA9B,CAFhB;AAKA,aAAKe,QAAL,CAAc;AACZjB,UAAAA,cAAc,EAAEgB;AADJ,SAAd;AAGD;AACF;;;WAED,iCAAwBA,KAAxB,EAA+B;AAC7B,UAAQ7B,OAAR,GAAoB,KAAKL,KAAL,CAAWC,OAA/B,CAAQI,OAAR;AAEA,yBAAyD,KAAKM,KAA9D;AAAA,UAAQC,IAAR,gBAAQA,IAAR;AAAA,UAAcK,QAAd,gBAAcA,QAAd;AAAA,UAAwBC,cAAxB,gBAAwBA,cAAxB;AAAA,UAAwCE,YAAxC,gBAAwCA,YAAxC;;AAEA,UAAIR,IAAI,KAAKd,KAAb,EAAoB;AAClB,aAAK0B,QAAL,CACEnB,OAAO,CAACI,cADV,EAEEd,cAAc,CAACuC,KAAD,EAAQjB,QAAR,EAAkBC,cAAlB,EAAkCE,YAAlC,CAFhB;AAKA,aAAKe,QAAL,CAAc;AACZpB,UAAAA,UAAU,EAAEmB;AADA,SAAd;AAGD;AACF;;;WAED,8BAAqBA,KAArB,EAA4B;AAC1B,UAAQ7B,OAAR,GAAoB,KAAKL,KAAL,CAAWC,OAA/B,CAAQI,OAAR;AAEA,yBAAuD,KAAKM,KAA5D;AAAA,UAAQC,IAAR,gBAAQA,IAAR;AAAA,UAAcG,UAAd,gBAAcA,UAAd;AAAA,UAA0BE,QAA1B,gBAA0BA,QAA1B;AAAA,UAAoCC,cAApC,gBAAoCA,cAApC;;AAEA,UAAIN,IAAI,KAAKd,KAAb,EAAoB;AAClB,aAAK0B,QAAL,CACEnB,OAAO,CAACI,cADV,EAEEd,cAAc,CAACoB,UAAD,EAAaE,QAAb,EAAuBC,cAAvB,EAAuCgB,KAAvC,CAFhB;AAKA,aAAKC,QAAL,CAAc;AACZf,UAAAA,YAAY,EAAEc;AADF,SAAd;AAGD;AACF;;;WAED,+BAAsBA,KAAtB,EAA6B;AAC3B,UAAQ7B,OAAR,GAAoB,KAAKL,KAAL,CAAWC,OAA/B,CAAQI,OAAR;AAEA,yBAA2D,KAAKM,KAAhE;AAAA,UAAQC,IAAR,gBAAQA,IAAR;AAAA,UAAcG,UAAd,gBAAcA,UAAd;AAAA,UAA0BG,cAA1B,gBAA0BA,cAA1B;AAAA,UAA0CE,YAA1C,gBAA0CA,YAA1C;;AAEA,UAAIR,IAAI,KAAKd,KAAb,EAAoB;AAClB,aAAK0B,QAAL,CACEnB,OAAO,CAACI,cADV,EAEEd,cAAc,CAACoB,UAAD,EAAamB,KAAb,EAAoBhB,cAApB,EAAoCE,YAApC,CAFhB;AAKA,aAAKe,QAAL,CAAc;AACZlB,UAAAA,QAAQ,EAAEiB;AADE,SAAd;AAGD;AACF;;;WAED,0BAAiBrB,kBAAjB,EAAqCuB,eAArC,EAAsD;AACpD,UAAMC,yBAAyB,GAAG,CAAC;AACjCC,QAAAA,KAAK,EAAE,QAD0B;AAEjCJ,QAAAA,KAAK,EAAE;AAF0B,OAAD,EAG/B;AACDI,QAAAA,KAAK,EAAE,MADN;AAEDJ,QAAAA,KAAK,EAAE;AAFN,OAH+B,EAM/B;AACDI,QAAAA,KAAK,EAAE,gBADN;AAEDJ,QAAAA,KAAK,EAAE;AAFN,OAN+B,EAS/B;AACDI,QAAAA,KAAK,EAAE,SADN;AAEDJ,QAAAA,KAAK,EAAE;AAFN,OAT+B,EAY/B;AACDI,QAAAA,KAAK,EAAE,mBADN;AAEDJ,QAAAA,KAAK,EAAE;AAFN,OAZ+B,CAAlC;AAiBA,mCACiB,YADjB,wBAGkB,aAHlB,sDAKmB,0CALnB;AAAA,mBAOkB,IAPlB;AAAA,oBAQmB,KAAKR,0BARxB;AAAA,mBASkBW,yBATlB;AAAA,iBAUgBxB;AAVhB;AAAA,gBAee,KAAKP,KAfpB;AAAA,qBAgBkB,2BAhBlB;AAAA,mBAiBkB,KAAKqB,uBAjBvB;AAAA,iBAkBgBS;AAlBhB;AAuBD;;;WAED,qBAAYG,eAAZ,EAA6BC,aAA7B,EAA4CtB,cAA5C,EAA4DE,YAA5D,EAA0E;AACxE,UAAMqB,gBAAgB,GAAG,CAAC;AACxBH,QAAAA,KAAK,EAAE,SADiB;AAExBJ,QAAAA,KAAK,EAAE;AAFiB,OAAD,EAGtB;AACDI,QAAAA,KAAK,EAAE,SADN;AAEDJ,QAAAA,KAAK,EAAE;AAFN,OAHsB,CAAzB;AAQA,mCACiB,OADjB,wBAEkB,aAFlB,4DAImB,0CAJnB;AAAA,mBAMkB,IANlB;AAAA,oBAOmB,KAAKL,sBAPxB;AAAA,mBAQkBY,gBARlB;AAAA,iBASgBvB;AAThB;AAAA,gBAce,KAAKZ,KAdpB;AAAA,qBAekB,4BAflB;AAAA,mBAgBkB,KAAKwB,uBAhBvB;AAAA,iBAiBgBS;AAjBhB,oCAoBkB,aApBlB,0DAwBmB,0CAxBnB;AAAA,mBA0BkB,IA1BlB;AAAA,oBA2BmB,KAAKR,oBA3BxB;AAAA,mBA4BkBU,gBA5BlB;AAAA,iBA6BgBrB;AA7BhB;AAAA,gBAkCe,KAAKd,KAlCpB;AAAA,qBAmCkB,0BAnClB;AAAA,mBAoCkB,KAAK0B,qBApCvB;AAAA,iBAqCgBQ;AArChB;AA0CD;;;WAED,kBAAS;AACP,yBAOI,KAAK7B,KAPT;AAAA,UACEC,IADF,gBACEA,IADF;AAAA,UAEEC,kBAFF,gBAEEA,kBAFF;AAAA,UAGEE,UAHF,gBAGEA,UAHF;AAAA,UAIEE,QAJF,gBAIEA,QAJF;AAAA,UAKEC,cALF,gBAKEA,cALF;AAAA,UAMEE,YANF,gBAMEA,YANF;AASA,UAAMsB,WAAW,GAAG,CAAC;AACnBJ,QAAAA,KAAK,EAAE,YADY;AAEnBJ,QAAAA,KAAK,EAAErC;AAFY,OAAD,EAGjB;AACDyC,QAAAA,KAAK,EAAE,OADN;AAEDJ,QAAAA,KAAK,EAAEpC;AAFN,OAHiB,CAApB;AAQA,mCACa,6CADb,wBAGc,aAHd,8DAKmB,cALnB;AAAA,mBAOkB,IAPlB;AAAA,oBAQmB,KAAK8B,YARxB;AAAA,mBASkBc,WATlB;AAAA,iBAUgB9B;AAVhB,cAcMA,IAAI,KAAKf,UAAT,IACK,KAAK8C,gBAAL,CAAsB9B,kBAAtB,EAA0CE,UAA1C,CAfX,EAmBMH,IAAI,KAAKd,KAAT,IACK,KAAK8C,WAAL,CACD7B,UADC,EAEDE,QAFC,EAGDC,cAHC,EAIDE,YAJC,CApBX;AA8BD;;;;EAjU4C7B,S;;SAA1BQ,iB;;AAqUrB,SAASQ,UAAT,CAAoBF,OAApB,EAA6B;AAC3B,SAAOA,OAAO,CAACwC,GAAR,CAAYpC,cAAZ,CAA2BqC,eAA3B,CAA2CC,OAAlD;AACD","sourcesContent":["import { Component } from 'inferno';\n\nimport InputSelect from 'dmn-js-shared/lib/components/InputSelect';\n\nimport { DurationInput } from './DurationInput';\n\nimport {\n  getComparisonString,\n  getRangeString,\n  parseDuration\n} from '../Utils';\n\nconst COMPARISON = 'comparison',\n      RANGE = 'range';\n\n// adapted from InputNumberEdit\nexport default class InputDurationEdit extends Component {\n  constructor(props, context) {\n    super(props, context);\n\n    this._modeling = context.injector.get('modeling');\n\n    const { element } = this.props.context;\n\n    this._type = getTypeRef(element);\n\n    const parsedString = parseDuration(element.businessObject.text, this._type);\n\n    if (parsedString) {\n      this.state = {\n        type: parsedString.type,\n        comparisonOperator: parsedString.operator || 'equals',\n        startValue: parsedString.values[0] || '',\n        endValue: parsedString.values[1] || '',\n        rangeStartType: parsedString.start || 'include',\n        rangeEndType: parsedString.end || 'include'\n      };\n    } else {\n      this.state = {\n        type: COMPARISON,\n        comparisonOperator: 'equals',\n        startValue: '',\n        endValue: '',\n        rangeStartType: 'include',\n        rangeEndType: 'include'\n      };\n    }\n\n    const debounceInput = context.injector.get('debounceInput');\n\n    this.debouncedEditCell = debounceInput(this.editCell.bind(this));\n    this.editCell = this.editCell.bind(this);\n\n    this.onComparisonOperatorChange = this.onComparisonOperatorChange.bind(this);\n    this.onComparisonValueChange = this.onComparisonValueChange.bind(this);\n    this.onTypeChange = this.onTypeChange.bind(this);\n    this.onRangeStartTypeChange = this.onRangeStartTypeChange.bind(this);\n    this.onRangeStartValueChange = this.onRangeStartValueChange.bind(this);\n    this.onRangeEndTypeChange = this.onRangeEndTypeChange.bind(this);\n    this.onRangeEndValueChange = this.onRangeEndValueChange.bind(this);\n  }\n\n  editCell(cell, text) {\n    this._modeling.editCell(cell, text);\n  }\n\n  onTypeChange(value) {\n    const { element } = this.props.context;\n\n    const {\n      comparisonOperator,\n      startValue,\n      endValue,\n      rangeStartType,\n      rangeEndType\n    } = this.state;\n\n    if (value === COMPARISON) {\n      this.editCell(\n        element.businessObject,\n        getComparisonString(comparisonOperator, startValue)\n      );\n    } else {\n      this.editCell(\n        element.businessObject,\n        getRangeString(startValue, endValue, rangeStartType, rangeEndType)\n      );\n    }\n\n    this.setState({\n      type: value\n    });\n  }\n\n  onComparisonOperatorChange(value) {\n    const { element } = this.props.context;\n\n    const { type, startValue } = this.state;\n\n    if (type === COMPARISON) {\n      this.editCell(element.businessObject, getComparisonString(value, startValue));\n\n      this.setState({\n        comparisonOperator: value\n      });\n    }\n  }\n\n  onComparisonValueChange(comparisonValue) {\n    const { element } = this.props.context;\n\n    const { type, comparisonOperator } = this.state;\n\n    if (type === COMPARISON) {\n      this.debouncedEditCell(\n        element.businessObject,\n        getComparisonString(comparisonOperator, comparisonValue)\n      );\n\n      this.setState({\n        startValue: comparisonValue\n      });\n    }\n  }\n\n  onRangeStartTypeChange(value) {\n    const { element } = this.props.context;\n\n    const { type, startValue, endValue, rangeEndType } = this.state;\n\n    if (type === RANGE) {\n      this.editCell(\n        element.businessObject,\n        getRangeString(startValue, endValue, value, rangeEndType)\n      );\n\n      this.setState({\n        rangeStartType: value\n      });\n    }\n  }\n\n  onRangeStartValueChange(value) {\n    const { element } = this.props.context;\n\n    const { type, endValue, rangeStartType, rangeEndType } = this.state;\n\n    if (type === RANGE) {\n      this.editCell(\n        element.businessObject,\n        getRangeString(value, endValue, rangeStartType, rangeEndType)\n      );\n\n      this.setState({\n        startValue: value\n      });\n    }\n  }\n\n  onRangeEndTypeChange(value) {\n    const { element } = this.props.context;\n\n    const { type, startValue, endValue, rangeStartType } = this.state;\n\n    if (type === RANGE) {\n      this.editCell(\n        element.businessObject,\n        getRangeString(startValue, endValue, rangeStartType, value)\n      );\n\n      this.setState({\n        rangeEndType: value\n      });\n    }\n  }\n\n  onRangeEndValueChange(value) {\n    const { element } = this.props.context;\n\n    const { type, startValue, rangeStartType, rangeEndType } = this.state;\n\n    if (type === RANGE) {\n      this.editCell(\n        element.businessObject,\n        getRangeString(startValue, value, rangeStartType, rangeEndType)\n      );\n\n      this.setState({\n        endValue: value\n      });\n    }\n  }\n\n  renderComparison(comparisonOperator, comparisonValue) {\n    const comparisonOperatorOptions = [{\n      label: 'Equals',\n      value: 'equals'\n    }, {\n      label: 'Less',\n      value: 'less'\n    }, {\n      label: 'Less or equals',\n      value: 'lessEquals'\n    }, {\n      label: 'Greater',\n      value: 'greater'\n    }, {\n      label: 'Greater or equals',\n      value: 'greaterEquals'\n    }];\n\n    return (\n      <div className=\"comparison\">\n\n        <h4 className=\"dms-heading\">Value</h4>\n\n        <div className=\"dms-fill-row dms-input-duration-edit-row\">\n          <InputSelect\n            noInput={ true }\n            onChange={ this.onComparisonOperatorChange }\n            options={ comparisonOperatorOptions }\n            value={ comparisonOperator } />\n\n          &nbsp;\n\n          <DurationInput\n            type={ this._type }\n            className=\"comparison-duration-input\"\n            onInput={ this.onComparisonValueChange }\n            value={ comparisonValue } />\n        </div>\n\n      </div>\n    );\n  }\n\n  renderRange(rangeStartValue, rangeEndValue, rangeStartType, rangeEndType) {\n    const rangeTypeOptions = [{\n      label: 'Include',\n      value: 'include'\n    }, {\n      label: 'Exclude',\n      value: 'exclude'\n    }];\n\n    return (\n      <div className=\"range\">\n        <h4 className=\"dms-heading\">Start value</h4>\n\n        <div className=\"dms-fill-row dms-input-duration-edit-row\">\n          <InputSelect\n            noInput={ true }\n            onChange={ this.onRangeStartTypeChange }\n            options={ rangeTypeOptions }\n            value={ rangeStartType } />\n\n          &nbsp;\n\n          <DurationInput\n            type={ this._type }\n            className=\"range-start-duration-input\"\n            onInput={ this.onRangeStartValueChange }\n            value={ rangeStartValue } />\n        </div>\n\n        <h4 className=\"dms-heading\">\n          End value\n        </h4>\n\n        <div className=\"dms-fill-row dms-input-duration-edit-row\">\n          <InputSelect\n            noInput={ true }\n            onChange={ this.onRangeEndTypeChange }\n            options={ rangeTypeOptions }\n            value={ rangeEndType } />\n\n          &nbsp;\n\n          <DurationInput\n            type={ this._type }\n            className=\"range-end-duration-input\"\n            onInput={ this.onRangeEndValueChange }\n            value={ rangeEndValue } />\n        </div>\n\n      </div>\n    );\n  }\n\n  render() {\n    const {\n      type,\n      comparisonOperator,\n      startValue,\n      endValue,\n      rangeStartType,\n      rangeEndType\n    } = this.state;\n\n    const typeOptions = [{\n      label: 'Comparison',\n      value: COMPARISON\n    }, {\n      label: 'Range',\n      value: RANGE\n    }];\n\n    return (\n      <div class=\"context-menu-container simple-duration-edit\">\n\n        <h3 class=\"dms-heading\">Edit duration</h3>\n\n        <div className=\"dms-fill-row\">\n          <InputSelect\n            noInput={ true }\n            onChange={ this.onTypeChange }\n            options={ typeOptions }\n            value={ type } />\n        </div>\n\n        {\n          type === COMPARISON\n            && this.renderComparison(comparisonOperator, startValue)\n        }\n\n        {\n          type === RANGE\n            && this.renderRange(\n              startValue,\n              endValue,\n              rangeStartType,\n              rangeEndType\n            )\n        }\n\n      </div>\n    );\n  }\n}\n\n\nfunction getTypeRef(element) {\n  return element.col.businessObject.inputExpression.typeRef;\n}\n"],"file":"InputDurationEdit.js"}