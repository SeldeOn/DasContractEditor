{"version":3,"sources":["../../src/components/ContentEditable.js"],"names":["Component","escapeHtml","getRange","setRange","applyRange","getWindowSelection","selectionUpdate","ContentEditable","props","context","event","propsFocus","onFocus","setState","focussed","propsBlur","onBlur","which","preventDefault","ctrlForNewline","isCmd","singleLine","stopPropagation","insertLineBreak","onInput","propsInput","text","innerText","node","onInputIEPolyfill","clipboardData","window","getData","document","execCommand","replace","state","isIE","oldText","innerHTML","setTimeout","newProps","newState","range","selected","newText","newRange","className","placeholder","value","join","getClassName","onKeypress","onPaste","onKeydown","__html","brTag","createElement","selection","getRangeAt","cloneRange","br","deleteContents","insertNode","setStartAfter","setEndAfter","ua","navigator","userAgent","indexOf","metaKey","ctrlKey"],"mappings":"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","sourcesContent":["import { Component } from 'inferno';\n\nimport escapeHtml from 'escape-html';\n\nimport {\n  getRange,\n  setRange,\n  applyRange,\n  getWindowSelection\n} from 'selection-ranges';\n\nimport selectionUpdate from 'selection-update';\n\n\n/**\n * A content ediable that performs proper selection updates on\n * editable changes. It normalizes editor operations by allowing\n * only <br/> and plain text to be inserted.\n *\n * The callback `onInput(text)` recieves text (including line breaks)\n * only. Updating the value via props will update the selection\n * if needed, too.\n *\n * @example\n *\n * class SomeComponent extends Component {\n *\n *   render() {\n *     return (\n *       <ContentEditable\n *         className=\"some classes\"\n *         value={ this.state.text }\n *         onInput={ this.handleInput }\n *         onFocus={ ... }\n *         onBlur={ ... } />\n *     );\n *   }\n *\n * }\n *\n */\nexport default class ContentEditable extends Component {\n\n  constructor(props, context) {\n    super(props, context);\n\n    this.state = {};\n\n    // TODO(nikku): remove once we drop IE 11 support\n    if (isIE()) {\n\n      // onInput shim for IE <= 11\n      this.onInputIEPolyfill = (event) => {\n\n        var oldText = this.node.innerHTML;\n\n        setTimeout(() => {\n\n          var text = this.node.innerHTML;\n          if (oldText !== text) {\n            this.onInput(event);\n          }\n        }, 0);\n      };\n\n    }\n  }\n\n  componentWillUpdate(newProps, newState) {\n\n    // save old selection + text for later\n    var node = this.node;\n\n    var range = newState.focussed && getRange(node);\n\n    this.selected = range && {\n      range: range,\n      text: innerText(node)\n    };\n  }\n\n  componentDidUpdate() {\n\n    var selected = this.selected;\n\n    if (!selected) {\n      return;\n    }\n\n    // compute and restore selection based on\n    // (possibly new) text\n\n    const range = selected.range;\n    const text = selected.text;\n\n    const node = this.node;\n\n    const newText = innerText(node);\n\n    const newRange = (\n      newText !== text\n        ? selectionUpdate(range, text, newText)\n        : range\n    );\n\n    setRange(node, newRange);\n  }\n\n  onFocus = event => {\n    var propsFocus = this.props.onFocus;\n\n    this.setState({\n      focussed: true\n    });\n\n    if (typeof propsFocus === 'function') {\n      propsFocus(event);\n    }\n  }\n\n  onBlur = event => {\n    var propsBlur = this.props.onBlur;\n\n    this.setState({\n      focussed: false\n    });\n\n    if (typeof propsBlur === 'function') {\n      propsBlur(event);\n    }\n  }\n\n  onKeydown = (event) => {\n\n    // enter\n    if (event.which === 13) {\n\n      // prevent default action (<br/> insert)\n      event.preventDefault();\n\n      if (this.props.ctrlForNewline && !isCmd(event)) {\n        return;\n      }\n\n      if (this.props.singleLine) {\n        return;\n      }\n\n      event.stopPropagation();\n\n      insertLineBreak();\n\n      this.onInput(event);\n    }\n\n  }\n\n  onInput = (event) => {\n\n    var propsInput = this.props.onInput;\n\n    if (typeof propsInput !== 'function') {\n      return;\n    }\n\n    var text = innerText(this.node);\n\n    propsInput(text);\n  }\n\n  // TODO(barmac): remove once we drop IE 11 support\n  onKeyPress = (event) => {\n    if (this.onInputIEPolyfill) {\n      this.onInputIEPolyfill(event);\n    }\n  }\n\n  onPaste = (event) => {\n\n    // TODO(barmac): remove once we drop IE 11 support\n    if (this.onInputIEPolyfill) {\n      this.onInputIEPolyfill(event);\n    }\n\n    if (this.props.singleLine) {\n      const text = (event.clipboardData || window.clipboardData).getData('text');\n\n      // replace newline with space\n      document.execCommand('insertText', false, text.replace(/\\n/g, ' '));\n      event.preventDefault();\n    }\n  }\n\n  getClassName() {\n    const {\n      className,\n      placeholder,\n      value\n    } = this.props;\n\n    return [\n      className || '',\n      'content-editable',\n      (!value && placeholder) ? 'content-editable--with-placeholder' : ''\n    ].join(' ');\n  }\n\n  render(props) {\n\n    var {\n      value,\n      placeholder\n    } = props;\n\n    // QUIRK: must add trailing <br/> for line\n    // breaks to properly work\n    value =\n      escapeHtml(value)\n        .replace(/\\r?\\n/g, '<br/>') + '<br/>';\n\n    return (\n      <div\n        className={ this.getClassName() }\n        contentEditable=\"true\"\n        spellcheck=\"false\"\n        data-placeholder={ placeholder || '' }\n        onInput={ this.onInput }\n        onKeypress={ this.onKeypress }\n        onPaste={ this.onPaste }\n        onFocus={ this.onFocus }\n        onBlur={ this.onBlur }\n        onKeydown={ this.onKeydown }\n        ref={ node => this.node = node }\n        dangerouslySetInnerHTML={ { __html: value } }></div>\n    );\n  }\n\n}\n\nfunction brTag() {\n  return document.createElement('br');\n}\n\nfunction innerText(node) {\n\n  // QUIRK: we must remove the last trailing <br/>, if any\n  return node.innerText.replace(/\\n$/, '');\n}\n\nfunction insertLineBreak() {\n\n  // insert line break at current insertation\n  // point; this assumes that the correct element, i.e.\n  // a <ContentEditable /> is currently focussed\n  var selection = getWindowSelection();\n\n  var range = selection.getRangeAt(0);\n\n  if (!range) {\n    return;\n  }\n\n  var newRange = range.cloneRange();\n\n  var br = brTag();\n\n  newRange.deleteContents();\n\n  newRange.insertNode(br);\n\n  newRange.setStartAfter(br);\n  newRange.setEndAfter(br);\n\n  applyRange(newRange);\n}\n\nfunction isIE() {\n  var ua = window.navigator.userAgent;\n\n  return (\n\n    // IE 10 or older\n    ua.indexOf('MSIE ') > 0 ||\n\n    // IE 11\n    ua.indexOf('Trident/') > 0\n  );\n}\n\nfunction isCmd(event) {\n  return event.metaKey || event.ctrlKey;\n}"],"file":"ContentEditable.js"}