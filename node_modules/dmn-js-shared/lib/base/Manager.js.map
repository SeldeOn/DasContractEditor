{"version":3,"sources":["../../src/base/Manager.js"],"names":["EventBus","DmnModdle","domify","query","domQuery","remove","domRemove","assign","debounce","every","find","isDefined","isFunction","isNumber","wrapForCompatibility","DEFAULT_CONTAINER_OPTIONS","width","height","position","Manager","options","_emit","views","_views","activeView","_activeView","_eventBus","_viewsChanged","_viewers","open","bind","importXML","saveXML","_init","xml","self","Promise","resolve","reject","parseWarnings","_moddle","fromXML","then","parseResult","definitions","rootElement","references","elementsById","warnings","ParseCompleteEvent","error","_setDefinitions","view","_getInitialView","noDisplayableContentsErr","Error","result","allWarnings","concat","parseError","checkDMNCompatibilityError","checkValidationError","data","event","createEvent","Object","defineProperty","enumerable","get","console","warn","_definitions","getActiveView","_getViewer","element","filter","v","toXML","on","off","once","parentNode","constructor","prototype","jquery","appendChild","_container","keys","forEach","viewerId","viewer","safeExecute","_options","_createModdle","container","containerOptions","style","ensureUnit","attachTo","_switchView","_updateViews","viewProviders","_getViewProviders","displayableElements","drgElement","newViews","provider","opens","$type","id","name","type","push","newActiveView","viewsEqual","activeViewChanged","viewNameChanged","viewsChanged","length","newView","complete","openError","openResult","activeViewer","newViewer","detach","_createViewer","Viewer","providerOptions","commonOptions","common","additionalModules","_parent","moddle","fire","moddleExtensions","val","err","message","olderDMNVersion","indexOf","pattern","match","exec","a","b","method"],"mappings":"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","sourcesContent":["import EventBus from 'diagram-js/lib/core/EventBus';\n\nimport DmnModdle from 'dmn-moddle';\n\nimport {\n  domify,\n  query as domQuery,\n  remove as domRemove\n} from 'min-dom';\n\nimport {\n  assign,\n  debounce,\n  every,\n  find,\n  isDefined,\n  isFunction,\n  isNumber\n} from 'min-dash';\n\nimport {\n  wrapForCompatibility\n} from '../util/CompatibilityUtils';\n\n\n/**\n * @typedef {import('./View').OpenResult} OpenResult\n */\n\n/**\n * @typedef {import('./View').OpenError} OpenError\n */\n\n\nconst DEFAULT_CONTAINER_OPTIONS = {\n  width: '100%',\n  height: '100%',\n  position: 'relative'\n};\n\n/**\n * The base class for DMN viewers and editors.\n *\n * @abstract\n */\nexport default class Manager {\n\n  /**\n   * Create a new instance with the given options.\n   *\n   * @param  {Object} options\n   *\n   * @return {Manager}\n   */\n  constructor(options={}) {\n    this._eventBus = new EventBus();\n\n    this._viewsChanged = debounce(this._viewsChanged, 0);\n\n    this._views = [];\n    this._viewers = {};\n\n    // keep support for callbacks\n    this.open = wrapForCompatibility(this.open.bind(this));\n    this.importXML = wrapForCompatibility(this.importXML.bind(this));\n    this.saveXML = wrapForCompatibility(this.saveXML.bind(this));\n\n    this._init(options);\n  }\n\n  /**\n  * The importXML result.\n  *\n  * @typedef {Object} ImportXMLResult\n  *\n  * @property {Array<string>} warnings\n  */\n\n  /**\n  * The importXML error.\n  *\n  * @typedef {Error} ImportXMLError\n  *\n  * @property {Array<string>} warnings\n  */\n\n  /**\n   * Parse and render a DMN diagram.\n   *\n   * Once finished the viewer reports back the result to the\n   * provided callback function with (err, warnings).\n   *\n   * ## Life-Cycle Events\n   *\n   * During import the viewer will fire life-cycle events:\n   *\n   *   * import.parse.start (about to read model from xml)\n   *   * import.parse.complete (model read; may have worked or not)\n   *   * import.render.start (graphical import start)\n   *   * import.render.complete (graphical import finished)\n   *   * import.done (everything done)\n   *\n   * You can use these events to hook into the life-cycle.\n   *\n   * @param {string} xml the DMN xml\n   * @param {Object} [options]\n   * @param {boolean} [options.open=true]\n   *\n   * @return {Promise<ImportXMLResult, ImportXMLError>}\n   */\n  importXML(xml, options) {\n    var self = this;\n\n    options = options || { open: true };\n\n    return new Promise(function(resolve, reject) {\n\n      // hook in pre-parse listeners +\n      // allow xml manipulation\n      xml = self._emit('import.parse.start', { xml: xml }) || xml;\n\n      var parseWarnings;\n\n      self._moddle.fromXML(xml, 'dmn:Definitions').then((parseResult) => {\n\n        var definitions = parseResult.rootElement;\n        var references = parseResult.references;\n        var elementsById = parseResult.elementsById;\n        parseWarnings = parseResult.warnings;\n\n        // hook in post parse listeners +\n        // allow definitions manipulation\n        definitions = self._emit('import.parse.complete', ParseCompleteEvent({\n          error: null,\n          definitions: definitions,\n          elementsById: elementsById,\n          references: references,\n          warnings: parseWarnings\n        })) || definitions;\n        self._setDefinitions(definitions);\n\n        if (!options.open) {\n          self._emit('import.done', { error: null, warnings: parseWarnings });\n\n          resolve({ warnings: parseWarnings });\n          return;\n        }\n\n        var view = self._activeView || self._getInitialView(self._views);\n\n        if (!view) {\n          var noDisplayableContentsErr = new Error('no displayable contents');\n\n          self._emit('import.done',\n            { error: noDisplayableContentsErr, warnings: parseWarnings });\n\n          noDisplayableContentsErr.warnings = parseWarnings;\n\n          return reject(noDisplayableContentsErr);\n        }\n\n        self.open(view)\n          .then(result => ({ warnings: result.warnings }))\n          .catch(error => ({ error: error, warnings: error.warnings }))\n          .then(result => {\n            var allWarnings = [].concat(parseWarnings, result.warnings);\n\n            self._emit('import.done', { error: result.error, warnings: allWarnings });\n\n            if (result.error) {\n              result.error.warnings = allWarnings;\n              reject(result.error);\n            } else {\n              resolve({ warnings: allWarnings });\n            }\n\n          });\n      }).catch((parseError) => {\n\n        parseWarnings = parseError.warnings;\n\n        parseError = checkDMNCompatibilityError(parseError, xml) ||\n          checkValidationError(parseError) ||\n          parseError;\n\n        self._emit('import.parse.complete', ParseCompleteEvent({\n          error: parseError,\n          warnings: parseWarnings\n        }));\n\n        self._emit('import.done', { error: parseError, warnings: parseWarnings });\n\n        parseError.warnings = parseWarnings;\n\n        return reject(parseError);\n      });\n\n    });\n\n    // TODO: remove with future dmn-js version\n    function ParseCompleteEvent(data) {\n\n      var event = self._eventBus.createEvent(data);\n\n      Object.defineProperty(event, 'context', {\n        enumerable: true,\n        get: function() {\n\n          console.warn(new Error(\n            'import.parse.complete <context> is deprecated ' +\n            'and will be removed in future library versions'\n          ));\n\n          return {\n            warnings: data.warnings,\n            references: data.references,\n            elementsById: data.elementsById\n          };\n        }\n      });\n\n      return event;\n    }\n  }\n\n  getDefinitions() {\n    return this._definitions;\n  }\n\n  /**\n   * Return active view.\n   *\n   * @return {View}\n   */\n  getActiveView() {\n    return this._activeView;\n  }\n\n  /**\n   * Get the currently active viewer instance.\n   *\n   * @return {View}\n   */\n  getActiveViewer() {\n    var activeView = this.getActiveView();\n\n    return activeView && this._getViewer(activeView);\n  }\n\n  getView(element) {\n    return this._views.filter(function(v) {\n      return v.element === element;\n    })[0];\n  }\n\n  getViews() {\n    return this._views;\n  }\n\n  /**\n   * The saveXML result.\n   *\n   * @typedef {Object} SaveXMLResult\n   *\n   * @property {string} xml\n   */\n\n  /**\n   * Export the currently displayed DMN diagram as\n   * a DMN XML document.\n   *\n   * ## Life-Cycle Events\n   *\n   * During XML saving the viewer will fire life-cycle events:\n   *\n   *   * saveXML.start (before serialization)\n   *   * saveXML.serialized (after xml generation)\n   *   * saveXML.done (everything done)\n   *\n   * You can use these events to hook into the life-cycle.\n   *\n   * @param {Object} [options] export options\n   * @param {boolean} [options.format=false] output formated XML\n   * @param {boolean} [options.preamble=true] output preamble\n   *\n   * @return {Promise<SaveXMLResult, Error>}\n   */\n  saveXML(options) {\n    var self = this;\n\n    options = options || {};\n\n    var definitions = this._definitions;\n\n    return new Promise(function(resolve, reject) {\n\n      if (!definitions) {\n        reject(new Error('no definitions loaded'));\n        return;\n      }\n\n      // allow to fiddle around with definitions\n      definitions = self._emit('saveXML.start', {\n        definitions: definitions\n      }) || definitions;\n\n      self._moddle.toXML(definitions, options)\n        .then(function(result) {\n\n          var xml = result.xml;\n\n          xml = self._emit('saveXML.serialized', {\n            xml: xml\n          }) || xml;\n\n          return { xml };\n        }).catch((error) => ({ error }))\n        .then((result) => {\n\n          self._emit('saveXML.done', result);\n\n          if (result.error) {\n            reject(result.error);\n          } else {\n            resolve({ xml: result.xml });\n          }\n        });\n\n    });\n\n  }\n\n  /**\n   * Register an event listener\n   *\n   * Remove a previously added listener via {@link #off(event, callback)}.\n   *\n   * @param {string} event\n   * @param {number} [priority]\n   * @param {Function} callback\n   * @param {Object} [that]\n   */\n  on(...args) {\n    this._eventBus.on(...args);\n  }\n\n  /**\n   * De-register an event listener\n   *\n   * @param {string} event\n   * @param {Function} callback\n   */\n  off(...args) {\n    this._eventBus.off(...args);\n  }\n\n  /**\n   * Register a listener to be invoked once only.\n   *\n   * @param {string} event\n   * @param {number} [priority]\n   * @param {Function} callback\n   * @param {Object} [that]\n   */\n  once(...args) {\n    this._eventBus.once(...args);\n  }\n\n  attachTo(parentNode) {\n\n    // unwrap jQuery if provided\n    if (parentNode.get && parentNode.constructor.prototype.jquery) {\n      parentNode = parentNode.get(0);\n    }\n\n    if (typeof parentNode === 'string') {\n      parentNode = domQuery(parentNode);\n    }\n\n    parentNode.appendChild(this._container);\n\n    this._emit('attach', {});\n  }\n\n  detach() {\n    this._emit('detach', {});\n\n    domRemove(this._container);\n  }\n\n  destroy() {\n    Object.keys(this._viewers).forEach((viewerId) => {\n      var viewer = this._viewers[viewerId];\n\n      safeExecute(viewer, 'destroy');\n    });\n\n    domRemove(this._container);\n  }\n\n  _init(options) {\n    this._options = options;\n\n    this._moddle = this._createModdle(options);\n\n    this._viewers = {};\n    this._views = [];\n\n    const container = domify('<div class=\"dmn-js-parent\"></div>');\n\n    const containerOptions = assign({}, DEFAULT_CONTAINER_OPTIONS, options);\n\n    assign(container.style, {\n      width: ensureUnit(containerOptions.width),\n      height: ensureUnit(containerOptions.height),\n      position: containerOptions.position\n    });\n\n    this._container = container;\n\n    if (options.container) {\n      this.attachTo(options.container);\n    }\n  }\n\n  /**\n   * Open diagram view.\n   *\n   * @param  {View} view\n   * @returns {Promise} Resolves with {OpenResult} when successful\n   * or rejects with {OpenError}\n   */\n  open(view) {\n    return this._switchView(view);\n  }\n\n  _setDefinitions(definitions) {\n    this._definitions = definitions;\n\n    this._updateViews();\n  }\n\n  _viewsChanged = () => {\n    this._emit('views.changed', {\n      views: this._views,\n      activeView: this._activeView\n    });\n  }\n\n  /**\n   * Recompute changed views after elements in\n   * the DMN diagram have changed.\n   */\n  _updateViews() {\n\n    var definitions = this._definitions;\n\n    if (!definitions) {\n      this._views = [];\n      this._switchView(null);\n\n      return;\n    }\n\n    var viewProviders = this._getViewProviders();\n\n    var displayableElements = [ definitions, ...(definitions.drgElement || []) ];\n\n    // compute list of available views\n    var views = this._views,\n        newViews = [];\n\n    for (var element of displayableElements) {\n      var provider = find(viewProviders, function(provider) {\n        if (typeof provider.opens === 'string') {\n          return provider.opens === element.$type;\n        } else {\n          return provider.opens(element);\n        }\n      });\n\n      if (!provider) {\n        continue;\n      }\n\n      var view = {\n        element,\n        id: element.id,\n        name: element.name,\n        type: provider.id\n      };\n\n      newViews.push(view);\n    }\n\n    var activeView = this._activeView,\n        newActiveView;\n\n    if (activeView) {\n\n      // check the new active view\n      newActiveView = find(newViews, function(view) {\n        return viewsEqual(activeView, view);\n      }) || this._getInitialView(newViews);\n\n      if (!newActiveView) {\n        this._switchView(null);\n        return;\n      }\n    }\n\n    // Views have changed if\n    // active view has changed OR\n    // number of views has changed OR\n    // not all views equal\n    var activeViewChanged = !viewsEqual(activeView, newActiveView)\n      || viewNameChanged(activeView, newActiveView);\n\n    var viewsChanged = views.length !== newViews.length\n        || !every(newViews, function(newView) {\n          return find(views, function(view) {\n            return viewsEqual(view, newView) && !viewNameChanged(view, newView);\n          });\n        });\n\n    this._activeView = newActiveView;\n    this._views = newViews;\n\n    if (activeViewChanged || viewsChanged) {\n      this._viewsChanged();\n    }\n  }\n\n  _getInitialView(views) {\n    return views[0];\n  }\n\n  /**\n   * Switch to another view.\n   *\n   * @param  {View} newView\n   * @returns {Promise} Resolves with {OpenResult} when successful\n   * or rejects with {OpenError}\n   */\n  _switchView(newView) {\n    var self = this;\n\n    return new Promise(function(resolve, reject) {\n      var complete = (openError, openResult) => {\n        self._viewsChanged();\n\n        if (openError) {\n          reject(openError);\n        } else {\n          resolve(openResult);\n        }\n      };\n\n      var activeView = self.getActiveView(),\n          activeViewer;\n\n      var newViewer = newView && self._getViewer(newView),\n          element = newView && newView.element;\n\n      if (activeView) {\n        activeViewer = self._getViewer(activeView);\n\n        if (activeViewer !== newViewer) {\n          safeExecute(activeViewer, 'clear');\n\n          activeViewer.detach();\n        }\n      }\n\n      self._activeView = newView;\n\n      if (newViewer) {\n\n        if (activeViewer !== newViewer) {\n          newViewer.attachTo(self._container);\n        }\n\n        self._emit('import.render.start', {\n          view: newView,\n          element: element\n        });\n\n        newViewer.open(element)\n          .then(\n            result => {\n              self._emit('import.render.complete', {\n                view: newView,\n                error: null,\n                warnings: result.warnings\n              });\n\n              complete(null, result);\n            })\n          .catch(\n            error => {\n              self._emit('import.render.complete', {\n                view: newView,\n                error: error,\n                warnings: error.warnings\n              });\n\n              complete(error, null);\n            }\n          );\n\n        return;\n      }\n\n      // no active view\n      complete();\n    });\n  }\n\n  _getViewer(view) {\n\n    var type = view.type;\n\n    var viewer = this._viewers[type];\n\n    if (!viewer) {\n      viewer = this._viewers[type] = this._createViewer(view.type);\n\n      this._emit('viewer.created', {\n        type: type,\n        viewer: viewer\n      });\n    }\n\n    return viewer;\n  }\n\n  _createViewer(id) {\n\n    var provider = find(this._getViewProviders(), function(provider) {\n      return provider.id === id;\n    });\n\n    if (!provider) {\n      throw new Error('no provider for view type <' + id + '>');\n    }\n\n    var Viewer = provider.constructor;\n\n    var providerOptions = this._options[id] || {};\n    var commonOptions = this._options.common || {};\n\n    return new Viewer({\n      ...commonOptions,\n      ...providerOptions,\n      additionalModules: [\n        ...(providerOptions.additionalModules || []), {\n          _parent: [ 'value', this ],\n          moddle: [ 'value', this._moddle ]\n        }\n      ]\n    });\n  }\n\n  /**\n   * Emit an event.\n   */\n  _emit(...args) {\n    return this._eventBus.fire(...args);\n  }\n\n  _createModdle(options) {\n    return new DmnModdle(options.moddleExtensions);\n  }\n\n  /**\n   * Return the list of available view providers.\n   *\n   * @abstract\n   *\n   * @return {Array<ViewProvider>}\n   */\n  _getViewProviders() {\n    return [];\n  }\n\n}\n\n\n// helpers //////////////////////\n\n/**\n * Ensure the passed argument is a proper unit (defaulting to px)\n */\nfunction ensureUnit(val) {\n  return val + (isNumber(val) ? 'px' : '');\n}\n\nfunction checkDMNCompatibilityError(err, xml) {\n\n  // check if we can indicate opening of old DMN 1.1 or DMN 1.2 diagrams\n\n  if (err.message !== 'failed to parse document as <dmn:Definitions>') {\n    return null;\n  }\n\n  var olderDMNVersion = (\n    (xml.indexOf('\"http://www.omg.org/spec/DMN/20151101/dmn.xsd\"') !== -1 && '1.1') ||\n    (xml.indexOf('\"http://www.omg.org/spec/DMN/20180521/MODEL/\"') !== -1 && '1.2')\n  );\n\n  if (!olderDMNVersion) {\n    return null;\n  }\n\n  err = new Error(\n    'unsupported DMN ' + olderDMNVersion + ' file detected; ' +\n    'only DMN 1.3 files can be opened'\n  );\n\n  console.error(\n    'Cannot open what looks like a DMN ' + olderDMNVersion + ' diagram. ' +\n    'Please refer to https://bpmn.io/l/dmn-compatibility.html ' +\n    'to learn how to make the toolkit compatible with older DMN files',\n    err\n  );\n\n  return err;\n}\n\nfunction checkValidationError(err) {\n\n  // check if we can help the user by indicating wrong DMN 1.3 xml\n  // (in case he or the exporting tool did not get that right)\n\n  var pattern = /unparsable content <([^>]+)> detected([\\s\\S]*)$/,\n      match = pattern.exec(err.message);\n\n  if (!match) {\n    return null;\n  }\n\n  err.message =\n    'unparsable content <' + match[ 1 ] + '> detected; ' +\n    'this may indicate an invalid DMN 1.3 diagram file' + match[ 2 ];\n\n  return err;\n}\n\nfunction viewsEqual(a, b) {\n  if (!isDefined(a)) {\n    if (!isDefined(b)) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  if (!isDefined(b)) {\n    return false;\n  }\n\n  // compare by element OR element ID equality\n  return a.element === b.element || a.id === b.id;\n}\n\nfunction viewNameChanged(a, b) {\n  return !a || !b || a.name !== b.name;\n}\n\nfunction safeExecute(viewer, method) {\n  if (isFunction(viewer[ method ])) {\n    viewer[ method ]();\n  }\n}\n"],"file":"Manager.js"}