{"version":3,"sources":["../../../src/features/drill-down/DrillDown.js"],"names":["is","domify","classes","domClasses","delegate","domDelegate","PROVIDERS","className","matches","el","businessObject","decisionLogic","DrillDown","injector","eventBus","overlays","config","_injector","_eventBus","_overlays","_config","enabled","on","element","i","length","editable","addOverlay","html","overlayId","add","position","top","left","bindEventListener","overlay","id","overlaysRoot","_overlayRoot","bind","triggerDefault","fire","drillDown","parent","get","view","getView","open","$inject"],"mappings":"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","sourcesContent":["import { is } from 'dmn-js-shared/lib/util/ModelUtil';\n\nimport {\n  domify,\n  classes as domClasses,\n  delegate as domDelegate\n} from 'min-dom';\n\n\nvar PROVIDERS = [\n  {\n    className: 'dmn-icon-decision-table',\n    matches: function(el) {\n      var businessObject = el.businessObject;\n\n      return (\n        is(businessObject, 'dmn:Decision') &&\n        is(businessObject.decisionLogic, 'dmn:DecisionTable')\n      );\n    }\n  },\n  {\n    className: 'dmn-icon-literal-expression',\n    matches: function(el) {\n      var businessObject = el.businessObject;\n\n      return (\n        is(businessObject, 'dmn:Decision') &&\n        is(businessObject.decisionLogic, 'dmn:LiteralExpression')\n      );\n    }\n  }\n];\n\n\n/**\n * Displays overlays that can be clicked in order to drill\n * down into a DMN element.\n */\nexport default class DrillDown {\n\n  constructor(injector, eventBus, overlays, config) {\n    this._injector = injector;\n    this._eventBus = eventBus;\n    this._overlays = overlays;\n\n    this._config = config || { enabled: true };\n\n    eventBus.on([ 'shape.added' ], ({ element }) => {\n\n      for (let i = 0; i < PROVIDERS.length; i++) {\n\n        const { matches, className } = PROVIDERS[i];\n\n        var editable = matches && matches(element);\n\n        if (editable) {\n          this.addOverlay(element, className);\n        }\n      }\n    });\n  }\n\n  /**\n   * Add overlay to an element that enables drill down.\n   *\n   * @param {Object} element Element to add overlay to.\n   * @param {string} className\n   *        CSS class that will be added to overlay in order to display icon.\n   */\n  addOverlay(element, className) {\n    const html = domify(`\n      <div class=\"drill-down-overlay\">\n        <span class=\"${className}\"></span>\n      </div>\n    `);\n\n    const overlayId = this._overlays.add(element, {\n      position: {\n        top: 2,\n        left: 2\n      },\n      html\n    });\n\n    // TODO(nikku): can we remove renamed to drillDown.enabled\n    if (this._config.enabled !== false) {\n      domClasses(html).add('interactive');\n\n      this.bindEventListener(element, html, overlayId);\n    }\n  }\n\n  /**\n   * @param {Object} element\n   * @param {Object} overlay\n   * @param {string} id\n   */\n  bindEventListener(element, overlay, id) {\n    const overlays = this._overlays,\n          eventBus = this._eventBus;\n\n    const overlaysRoot = overlays._overlayRoot;\n\n    domDelegate.bind(overlaysRoot, '[data-overlay-id=\"' + id + '\"]', 'click', () => {\n\n      const triggerDefault = eventBus.fire('drillDown.click', {\n        element\n      });\n\n      if (triggerDefault === false) {\n        return;\n      }\n\n      this.drillDown(element);\n    });\n  }\n\n\n  /**\n   * Drill down into the specific element.\n   *\n   * @param  {djs.model.Base} element\n   *\n   * @return {boolean} whether drill down was executed\n   */\n  drillDown(element) {\n\n    const parent = this._injector.get('_parent', false);\n\n    // no parent; skip drill down\n    if (!parent) {\n      return false;\n    }\n\n    const view = parent.getView(element.businessObject);\n\n    // no view to drill down to\n    if (!view) {\n      return false;\n    }\n\n    parent.open(view);\n\n    return true;\n  }\n\n}\n\nDrillDown.$inject = [\n  'injector',\n  'eventBus',\n  'overlays',\n  'config.drillDown'\n];"],"file":"DrillDown.js"}