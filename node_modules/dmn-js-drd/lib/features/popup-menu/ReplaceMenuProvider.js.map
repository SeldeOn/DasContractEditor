{"version":3,"sources":["../../../src/features/popup-menu/ReplaceMenuProvider.js"],"names":["is","forEach","filter","replaceOptions","ReplaceMenuProvider","popupMenu","modeling","moddle","drdReplace","rules","translate","_popupMenu","_modeling","_moddle","_drdReplace","_rules","_translate","register","$inject","prototype","registerProvider","getEntries","element","businessObject","allowed","options","DECISION","option","notEmpty","actionName","decisionLogic","notTable","notExp","_createEntries","menuEntries","self","definition","entry","_createMenuEntry","push","action","replaceElement","replaceAction","target","menuEntry","label","className","id","getHeaderEntries"],"mappings":"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","sourcesContent":["import {\n  is\n} from 'dmn-js-shared/lib/util/ModelUtil';\n\nimport {\n  forEach,\n  filter\n} from 'min-dash';\n\nimport replaceOptions from '../replace/ReplaceOptions';\n\n\n/**\n * This module is an element agnostic replace menu provider for the popup menu.\n */\nexport default function ReplaceMenuProvider(\n    popupMenu, modeling, moddle,\n    drdReplace, rules, translate) {\n\n  this._popupMenu = popupMenu;\n  this._modeling = modeling;\n  this._moddle = moddle;\n  this._drdReplace = drdReplace;\n  this._rules = rules;\n  this._translate = translate;\n\n  this.register();\n}\n\nReplaceMenuProvider.$inject = [\n  'popupMenu',\n  'modeling',\n  'moddle',\n  'drdReplace',\n  'rules',\n  'translate'\n];\n\n\n/**\n * Register replace menu provider in the popup menu\n */\nReplaceMenuProvider.prototype.register = function() {\n  this._popupMenu.registerProvider('dmn-replace', this);\n};\n\n\n/**\n * Get all entries from replaceOptions for the given element.\n *\n * @param {djs.model.Base} element\n *\n * @return {Array<Object>} a list of menu entry items\n */\nReplaceMenuProvider.prototype.getEntries = function(element) {\n\n  var businessObject = element.businessObject;\n\n  var rules = this._rules;\n\n  if (!rules.allowed('shape.replace', { element: element })) {\n    return [];\n  }\n\n  if (is(businessObject, 'dmn:Decision')) {\n\n    var options = filter(replaceOptions.DECISION, function(option) {\n      var notEmpty = (\n        option.actionName === 'replace-with-empty-decision' &&\n        businessObject.decisionLogic\n      );\n      var notTable = (\n        option.actionName === 'replace-with-decision-table' &&\n        !is(businessObject.decisionLogic, 'dmn:DecisionTable')\n      );\n      var notExp = (\n        option.actionName === 'replace-with-literal-expression' &&\n        !is(businessObject.decisionLogic, 'dmn:LiteralExpression')\n      );\n\n      return notEmpty || notTable || notExp;\n    });\n\n    return this._createEntries(element, options);\n  }\n\n  return [];\n};\n\n\n/**\n * Creates an array of menu entry objects for a given element.\n *\n * @param  {djs.model.Base} element\n * @param  {Object} replaceOptions\n *\n * @return {Array<Object>} a list of menu items\n */\nReplaceMenuProvider.prototype._createEntries = function(element, replaceOptions) {\n  var menuEntries = [];\n\n  var self = this;\n\n  forEach(replaceOptions, function(definition) {\n    var entry = self._createMenuEntry(definition, element);\n\n    menuEntries.push(entry);\n  });\n\n  return menuEntries;\n};\n\n\n/**\n * Creates and returns a single menu entry item.\n *\n * @param  {Object} definition a single replace options definition object\n * @param  {djs.model.Base} element\n * @param  {Function} [action] an action callback function which gets called when\n *                             the menu entry is being triggered.\n *\n * @return {Object} menu entry item\n */\nReplaceMenuProvider.prototype._createMenuEntry = function(definition, element, action) {\n  var replaceElement = this._drdReplace.replaceElement;\n  var translate = this._translate;\n\n  var replaceAction = function() {\n    return replaceElement(element, definition.target);\n  };\n\n  action = action || replaceAction;\n\n  var menuEntry = {\n    label: translate(definition.label),\n    className: definition.className,\n    id: definition.actionName,\n    action: action\n  };\n\n  return menuEntry;\n};\n\nReplaceMenuProvider.prototype.getHeaderEntries = function(element) {\n  return [];\n};\n"],"file":"ReplaceMenuProvider.js"}