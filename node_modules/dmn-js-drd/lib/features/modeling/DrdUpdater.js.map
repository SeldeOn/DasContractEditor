{"version":3,"sources":["../../../src/features/modeling/DrdUpdater.js"],"names":["assign","inherits","remove","collectionRemove","add","collectionAdd","is","isAny","CommandInterceptor","DrdUpdater","connectionDocking","definitionPropertiesView","drdFactory","drdRules","injector","invoke","_definitionPropertiesView","_drdFactory","_drdRules","self","cropConnection","context","connection","cropped","waypoints","getCroppedWaypoints","executed","reverted","updateParent","parent","shape","target","reverseUpdateParent","oldParent","newParent","updateBounds","updateConnectionWaypoints","connectionBo","businessObject","targetBo","updateSemanticParent","newTarget","newTargetBo","oldTarget","oldTargetBo","update","$inject","prototype","bounds","di","x","y","width","height","edge","waypoint","createDiWaypoints","map","$parent","element","parentBo","updateDiParent","children","containment","get","push","parentDi","diagram","diagramElements","Error"],"mappings":"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","sourcesContent":["import { assign } from 'min-dash';\n\nimport inherits from 'inherits';\n\nimport {\n  remove as collectionRemove,\n  add as collectionAdd\n} from 'diagram-js/lib/util/Collections';\n\nimport {\n  is,\n  isAny\n} from 'dmn-js-shared/lib/util/ModelUtil';\n\nimport CommandInterceptor from 'diagram-js/lib/command/CommandInterceptor';\n\n\n/**\n * Update DMN 1.3 information.\n */\nexport default function DrdUpdater(\n    connectionDocking,\n    definitionPropertiesView,\n    drdFactory,\n    drdRules,\n    injector\n) {\n  injector.invoke(CommandInterceptor, this);\n\n  this._definitionPropertiesView = definitionPropertiesView;\n  this._drdFactory = drdFactory;\n  this._drdRules = drdRules;\n\n  var self = this;\n\n  function cropConnection(context) {\n    var connection = context.connection,\n        cropped = context.cropped;\n\n    if (!cropped) {\n      connection.waypoints = connectionDocking.getCroppedWaypoints(connection);\n\n      context.cropped = true;\n    }\n  }\n\n  this.executed([\n    'connection.create',\n    'connection.layout'\n  ], cropConnection, true);\n\n  this.reverted([ 'connection.layout' ], function(context) {\n    delete context.cropped;\n  }, true);\n\n  function updateParent(context) {\n    var connection = context.connection,\n        parent = context.parent,\n        shape = context.shape;\n\n    if (connection && !is(connection, 'dmn:Association')) {\n      parent = connection.target;\n    }\n\n    self.updateParent(shape || connection, parent);\n  }\n\n  function reverseUpdateParent(context) {\n    var connection = context.connection,\n        shape = context.shape;\n\n    var oldParent = context.parent || context.newParent;\n\n    if (connection && !is(connection, 'dmn:Association')) {\n      oldParent = connection.target;\n    }\n\n    self.updateParent(shape || connection, oldParent);\n  }\n\n  this.executed([\n    'connection.create',\n    'connection.delete',\n    'connection.move',\n    'shape.create',\n    'shape.delete'\n  ], updateParent, true);\n\n  this.reverted([\n    'connection.create',\n    'connection.delete',\n    'connection.move',\n    'shape.create',\n    'shape.delete'\n  ], reverseUpdateParent, true);\n\n  function updateBounds(context) {\n    var shape = context.shape;\n\n    if (!(is(shape, 'dmn:DRGElement') || is(shape, 'dmn:TextAnnotation'))) {\n      return;\n    }\n\n    self.updateBounds(shape);\n  }\n\n  this.executed([ 'shape.create', 'shape.move', 'shape.resize' ], updateBounds, true);\n\n  this.reverted([ 'shape.create', 'shape.move', 'shape.resize' ], updateBounds, true);\n\n  function updateConnectionWaypoints(context) {\n    self.updateConnectionWaypoints(context);\n  }\n\n  this.executed([\n    'connection.create',\n    'connection.layout',\n    'connection.move',\n    'connection.updateWaypoints'\n  ], updateConnectionWaypoints, true);\n\n  this.reverted([\n    'connection.create',\n    'connection.layout',\n    'connection.move',\n    'connection.updateWaypoints'\n  ], updateConnectionWaypoints, true);\n\n  this.executed('connection.create', function(context) {\n    var connection = context.connection,\n        connectionBo = connection.businessObject,\n        target = context.target,\n        targetBo = target.businessObject;\n\n    if (is(connection, 'dmn:Association')) {\n      updateParent(context);\n    } else {\n\n      // parent is target\n      self.updateSemanticParent(connectionBo, targetBo);\n    }\n  }, true);\n\n  this.reverted('connection.create', function(context) {\n    reverseUpdateParent(context);\n  }, true);\n\n  this.executed('connection.reconnect', function(context) {\n    var connection = context.connection,\n        connectionBo = connection.businessObject,\n        newTarget = context.newTarget,\n        newTargetBo = newTarget.businessObject;\n\n    if (is(connectionBo, 'dmn:Association')) {\n      return;\n    }\n\n    self.updateSemanticParent(connectionBo, newTargetBo);\n  }, true);\n\n  this.reverted('connection.reconnect', function(context) {\n    var connection = context.connection,\n        connectionBo = connection.businessObject,\n        oldTarget = context.oldTarget,\n        oldTargetBo = oldTarget.businessObject;\n\n    if (is(connectionBo, 'dmn:Association')) {\n      return;\n    }\n\n    self.updateSemanticParent(connectionBo, oldTargetBo);\n  }, true);\n\n  this.executed('element.updateProperties', function(context) {\n    definitionPropertiesView.update();\n  }, true);\n\n  this.reverted('element.updateProperties', function(context) {\n    definitionPropertiesView.update();\n  }, true);\n\n}\n\ninherits(DrdUpdater, CommandInterceptor);\n\nDrdUpdater.$inject = [\n  'connectionDocking',\n  'definitionPropertiesView',\n  'drdFactory',\n  'drdRules',\n  'injector'\n];\n\nDrdUpdater.prototype.updateBounds = function(shape) {\n  var businessObject = shape.businessObject,\n      bounds = businessObject.di.bounds;\n\n  // update bounds\n  assign(bounds, {\n    x: shape.x,\n    y: shape.y,\n    width: shape.width,\n    height: shape.height\n  });\n};\n\nDrdUpdater.prototype.updateConnectionWaypoints = function(context) {\n  var drdFactory = this._drdFactory;\n\n  var connection = context.connection,\n      businessObject = connection.businessObject,\n      edge = businessObject.di;\n\n  edge.waypoint = drdFactory.createDiWaypoints(connection.waypoints)\n    .map(function(waypoint) {\n      waypoint.$parent = edge;\n\n      return waypoint;\n    });\n};\n\nDrdUpdater.prototype.updateParent = function(element, oldParent) {\n  var parent = element.parent;\n\n  if (!is(element, 'dmn:DRGElement') && !is(element, 'dmn:Artifact')) {\n    parent = oldParent;\n  }\n\n  var businessObject = element.businessObject,\n      parentBo = parent && parent.businessObject;\n\n  this.updateSemanticParent(businessObject, parentBo);\n\n  this.updateDiParent(businessObject.di, parentBo && parentBo.di);\n};\n\nDrdUpdater.prototype.updateSemanticParent = function(businessObject, parent) {\n  var children,\n      containment;\n\n  if (businessObject.$parent === parent) {\n    return;\n  }\n\n  if (is(businessObject, 'dmn:DRGElement')) {\n    containment = 'drgElement';\n  } else if (is(businessObject, 'dmn:Artifact')) {\n    containment = 'artifact';\n  } else if (is(businessObject, 'dmn:InformationRequirement')) {\n    containment = 'informationRequirement';\n  } else if (is(businessObject, 'dmn:AuthorityRequirement')) {\n    containment = 'authorityRequirement';\n  } else if (is(businessObject, 'dmn:KnowledgeRequirement')) {\n    containment = 'knowledgeRequirement';\n  }\n\n  if (businessObject.$parent) {\n\n    // remove from old parent\n    children = businessObject.$parent.get(containment);\n\n    collectionRemove(children, businessObject);\n  }\n\n  if (parent) {\n\n    // add to new parent\n    children = parent.get(containment);\n\n    if (children) {\n      children.push(businessObject);\n\n      businessObject.$parent = parent;\n    }\n  } else {\n    businessObject.$parent = null;\n  }\n};\n\nDrdUpdater.prototype.updateDiParent = function(di, parentDi) {\n\n  if (di.$parent === parentDi) {\n    return;\n  }\n\n  if (isAny(di, [ 'dmndi:DMNEdge', 'dmndi:DMNShape' ])) {\n\n    var diagram = parentDi || di;\n    while (!is(diagram, 'dmndi:DMNDiagram')) {\n      diagram = diagram.$parent;\n    }\n\n    var diagramElements = diagram.get('diagramElements');\n    if (parentDi) {\n      di.$parent = diagram;\n\n      collectionAdd(diagramElements, di);\n    } else {\n      di.$parent = null;\n\n      collectionRemove(diagramElements, di);\n    }\n  } else {\n    throw new Error('unsupported');\n  }\n};\n"],"file":"DrdUpdater.js"}