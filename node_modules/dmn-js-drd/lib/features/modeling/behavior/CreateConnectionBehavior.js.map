{"version":3,"sources":["../../../../src/features/modeling/behavior/CreateConnectionBehavior.js"],"names":["inherits","CommandInterceptor","is","CreateConnectionBehavior","drdFactory","injector","invoke","preExecute","context","connection","connectionBo","businessObject","source","target","elementRef","sourceRef","targetRef","create","href","id","$parent","getRequirementType","$inject"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,UAArB;AAEA,OAAOC,kBAAP,MAA+B,2CAA/B;AAEA,SAASC,EAAT,QAAmB,kCAAnB;AAGA;AACA;AACA;AACA;AACA;AACA;;AACA,eAAe,SAASC,wBAAT,CAAkCC,UAAlC,EAA8CC,QAA9C,EAAwD;AACrEA,EAAAA,QAAQ,CAACC,MAAT,CAAgBL,kBAAhB,EAAoC,IAApC;AAEA,OAAKM,UAAL,CAAgB,mBAAhB,EAAqC,UAASC,OAAT,EAAkB;AACrD,QAAIC,UAAU,GAAGD,OAAO,CAACC,UAAzB;AAAA,QACIC,YAAY,GAAGD,UAAU,CAACE,cAD9B;AAAA,QAEIC,MAAM,GAAGJ,OAAO,CAACI,MAFrB;AAAA,QAGIC,MAAM,GAAGL,OAAO,CAACK,MAHrB;AAAA,QAIIC,UAJJ;AAAA,QAKIC,SALJ;AAAA,QAMIC,SANJ;;AAQA,QAAId,EAAE,CAACO,UAAD,EAAa,iBAAb,CAAN,EAAuC;AACrCM,MAAAA,SAAS,GAAGL,YAAY,CAACK,SAAb,GAAyBX,UAAU,CAC5Ca,MADkC,CAC3B,yBAD2B,EACA;AACjCC,QAAAA,IAAI,EAAE,MAAMN,MAAM,CAACO;AADc,OADA,CAArC;AAKAJ,MAAAA,SAAS,CAACK,OAAV,GAAoBV,YAApB;AAEAM,MAAAA,SAAS,GAAGN,YAAY,CAACM,SAAb,GAAyBZ,UAAU,CAC5Ca,MADkC,CAC3B,yBAD2B,EACA;AACjCC,QAAAA,IAAI,EAAE,MAAML,MAAM,CAACM;AADc,OADA,CAArC;AAKAH,MAAAA,SAAS,CAACI,OAAV,GAAoBV,YAApB;AACD,KAdD,MAcO;AACLI,MAAAA,UAAU,GAAGJ,YAAY,CAAE,aAAaW,kBAAkB,CAACT,MAAD,CAAjC,CAAZ,GAA0DR,UAAU,CAC9Ea,MADoE,CAC7D,yBAD6D,EAClC;AACjCC,QAAAA,IAAI,EAAE,MAAMN,MAAM,CAACO;AADc,OADkC,CAAvE;AAKAL,MAAAA,UAAU,CAACM,OAAX,GAAqBV,YAArB;AACD;AACF,GA/BD,EA+BG,IA/BH;AAiCD;AAEDP,wBAAwB,CAACmB,OAAzB,GAAmC,CACjC,YADiC,EAEjC,UAFiC,CAAnC;AAKAtB,QAAQ,CAACG,wBAAD,EAA2BF,kBAA3B,CAAR,C,CAGA;;AAEA,SAASoB,kBAAT,CAA4BT,MAA5B,EAAoC;AAClC,MAAIV,EAAE,CAACU,MAAD,EAAS,4BAAT,CAAN,EAA8C;AAC5C,WAAO,WAAP;AACD,GAFD,MAEO,IAAIV,EAAE,CAACU,MAAD,EAAS,cAAT,CAAN,EAAgC;AACrC,WAAO,UAAP;AACD,GAFM,MAEA,IAAIV,EAAE,CAACU,MAAD,EAAS,eAAT,CAAN,EAAiC;AACtC,WAAO,OAAP;AACD,GAFM,MAEA,IAAIV,EAAE,CAACU,MAAD,EAAS,qBAAT,CAAN,EAAuC;AAC5C,WAAO,WAAP;AACD;AACF","sourcesContent":["import inherits from 'inherits';\n\nimport CommandInterceptor from 'diagram-js/lib/command/CommandInterceptor';\n\nimport { is } from 'dmn-js-shared/lib/util/ModelUtil';\n\n\n/**\n * Creates DMN-specific refs for new connection.\n *\n * @param {DrdFactory} drdFactory\n * @param {Injector} injector\n */\nexport default function CreateConnectionBehavior(drdFactory, injector) {\n  injector.invoke(CommandInterceptor, this);\n\n  this.preExecute('connection.create', function(context) {\n    var connection = context.connection,\n        connectionBo = connection.businessObject,\n        source = context.source,\n        target = context.target,\n        elementRef,\n        sourceRef,\n        targetRef;\n\n    if (is(connection, 'dmn:Association')) {\n      sourceRef = connectionBo.sourceRef = drdFactory\n        .create('dmn:DMNElementReference', {\n          href: '#' + source.id\n        });\n\n      sourceRef.$parent = connectionBo;\n\n      targetRef = connectionBo.targetRef = drdFactory\n        .create('dmn:DMNElementReference', {\n          href: '#' + target.id\n        });\n\n      targetRef.$parent = connectionBo;\n    } else {\n      elementRef = connectionBo[ 'required' + getRequirementType(source) ] = drdFactory\n        .create('dmn:DMNElementReference', {\n          href: '#' + source.id\n        });\n\n      elementRef.$parent = connectionBo;\n    }\n  }, true);\n\n}\n\nCreateConnectionBehavior.$inject = [\n  'drdFactory',\n  'injector'\n];\n\ninherits(CreateConnectionBehavior, CommandInterceptor);\n\n\n// helpers //////////\n\nfunction getRequirementType(source) {\n  if (is(source, 'dmn:BusinessKnowledgeModel')) {\n    return 'Knowledge';\n  } else if (is(source, 'dmn:Decision')) {\n    return 'Decision';\n  } else if (is(source, 'dmn:InputData')) {\n    return 'Input';\n  } else if (is(source, 'dmn:KnowledgeSource')) {\n    return 'Authority';\n  }\n}\n"],"file":"CreateConnectionBehavior.js"}