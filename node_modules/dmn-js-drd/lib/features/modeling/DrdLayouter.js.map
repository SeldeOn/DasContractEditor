{"version":3,"sources":["../../../src/features/modeling/DrdLayouter.js"],"names":["inherits","BaseLayouter","getMid","getOrientation","is","assign","ADDITIONAL_WAYPOINT_DISTANCE","DrdLayouter","connectionDocking","_connectionDocking","$inject","prototype","layoutConnection","connection","hints","source","target","waypoints","connectionStart","connectionEnd","orientation","getConnectionDocking","length","croppedWaypoints","getCroppedWaypoints","pop","additionalWaypoint","x","y","includes","concat","point","shape","original"],"mappings":"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","sourcesContent":["import inherits from 'inherits';\n\nimport BaseLayouter from 'diagram-js/lib/layout/BaseLayouter';\n\nimport {\n  getMid,\n  getOrientation\n} from 'diagram-js/lib/layout/LayoutUtil';\n\nimport { is } from 'dmn-js-shared/lib/util/ModelUtil';\n\nimport { assign } from 'min-dash';\n\nvar ADDITIONAL_WAYPOINT_DISTANCE = 20;\n\n\nexport default function DrdLayouter(connectionDocking) {\n  this._connectionDocking = connectionDocking;\n}\n\ninherits(DrdLayouter, BaseLayouter);\n\nDrdLayouter.$inject = [ 'connectionDocking' ];\n\n\nDrdLayouter.prototype.layoutConnection = function(connection, hints) {\n  var connectionDocking = this._connectionDocking;\n\n  if (!hints) {\n    hints = {};\n  }\n\n  var source = hints.source || connection.source,\n      target = hints.target || connection.target,\n      waypoints = hints.waypoints || connection.waypoints || [],\n      connectionStart = hints.connectionStart,\n      connectionEnd = hints.connectionEnd,\n      orientation = getOrientation(source, target);\n\n  if (!connectionStart) {\n    connectionStart = getConnectionDocking(waypoints[ 0 ], source);\n  }\n\n  if (!connectionEnd) {\n    connectionEnd = getConnectionDocking(waypoints[ waypoints.length - 1 ], target);\n  }\n\n  if (is(connection, 'dmn:InformationRequirement')) {\n    waypoints = [ connectionStart, connectionEnd ];\n\n    var croppedWaypoints = connectionDocking.getCroppedWaypoints(\n      assign({}, connection, {\n        waypoints: waypoints\n      }),\n      source,\n      target\n    );\n\n    connectionEnd = croppedWaypoints.pop();\n\n    var additionalWaypoint = {\n      x: connectionEnd.x,\n      y: connectionEnd.y\n    };\n\n    if (orientation.includes('bottom')) {\n      additionalWaypoint.y += ADDITIONAL_WAYPOINT_DISTANCE;\n    } else if (orientation.includes('top')) {\n      additionalWaypoint.y -= ADDITIONAL_WAYPOINT_DISTANCE;\n    } else if (orientation.includes('right')) {\n      additionalWaypoint.x += ADDITIONAL_WAYPOINT_DISTANCE;\n    } else {\n      additionalWaypoint.x -= ADDITIONAL_WAYPOINT_DISTANCE;\n    }\n\n    waypoints = croppedWaypoints.concat([ additionalWaypoint, connectionEnd ]);\n\n    return waypoints;\n  }\n\n  return [ connectionStart, connectionEnd ];\n};\n\nfunction getConnectionDocking(point, shape) {\n  return point ? (point.original || point) : getMid(shape);\n}\n"],"file":"DrdLayouter.js"}