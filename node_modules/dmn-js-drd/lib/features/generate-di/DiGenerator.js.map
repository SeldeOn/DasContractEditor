{"version":3,"sources":["../../../src/features/generate-di/DiGenerator.js"],"names":["forEach","containsDi","is","DiGenerator","drdFactory","elementFactory","eventBus","drdUpdater","createDi","definitions","dmnDI","create","set","diagram","index","get","drgElement","dimensions","_getDefaultSize","di","createDiShape","x","y","width","height","updateDiParent","on","$inject"],"mappings":"AAAA,SAASA,OAAT,QAAwB,UAAxB;AAEA,SAASC,UAAT,QAA2B,+BAA3B;AACA,SAASC,EAAT,QAAmB,kCAAnB;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,eAAe,SAASC,WAAT,CAAqBC,UAArB,EAAiCC,cAAjC,EAAiDC,QAAjD,EAA2DC,UAA3D,EAAuE;AACpF,WAASC,QAAT,CAAkBC,WAAlB,EAA+B;AAE7B;AACA,QAAIC,KAAK,GAAGD,WAAW,CAACC,KAAxB;;AAEA,QAAI,CAACA,KAAL,EAAY;AACVA,MAAAA,KAAK,GAAGN,UAAU,CAACO,MAAX,CAAkB,aAAlB,CAAR;AACAF,MAAAA,WAAW,CAACG,GAAZ,CAAgB,OAAhB,EAAyBF,KAAzB;AACD;;AAED,QAAIG,OAAO,GAAGT,UAAU,CAACO,MAAX,CAAkB,kBAAlB,CAAd;AAEAD,IAAAA,KAAK,CAACE,GAAN,CAAU,UAAV,EAAsB,CAAEC,OAAF,CAAtB;AAEA,QAAIC,KAAK,GAAG,CAAZ;AAEAd,IAAAA,OAAO,CAACS,WAAW,CAACM,GAAZ,CAAgB,YAAhB,CAAD,EAAgC,UAASC,UAAT,EAAqB;AAE1D;AACA,UAAI,CAACd,EAAE,CAACc,UAAD,EAAa,cAAb,CAAP,EAAqC;AACnC;AACD;;AAGD,UAAIC,UAAU,GAAGZ,cAAc,CAACa,eAAf,CAA+BF,UAA/B,CAAjB;;AAEA,UAAIG,EAAE,GAAGf,UAAU,CAACgB,aAAX,CAAyBJ,UAAzB,EAAqC;AAC5CK,QAAAA,CAAC,EAAE,MAAOP,KAAK,GAAG,EAD0B;AAE5CQ,QAAAA,CAAC,EAAE,MAAOR,KAAK,GAAG,EAF0B;AAG5CS,QAAAA,KAAK,EAAEN,UAAU,CAACM,KAH0B;AAI5CC,QAAAA,MAAM,EAAEP,UAAU,CAACO;AAJyB,OAArC,CAAT;AAOAjB,MAAAA,UAAU,CAACkB,cAAX,CAA0BN,EAA1B,EAA8BN,OAA9B;AAEAC,MAAAA,KAAK;AACN,KApBM,CAAP;AAqBD;;AAEDR,EAAAA,QAAQ,CAACoB,EAAT,CAAY,cAAZ,EAA4B,gBAAqB;AAAA,QAAlBjB,WAAkB,QAAlBA,WAAkB;;AAC/C,QAAI,CAACR,UAAU,CAACQ,WAAD,CAAf,EAA8B;AAC5BD,MAAAA,QAAQ,CAACC,WAAD,CAAR;AACD;AACF,GAJD;AAKD;AAEDN,WAAW,CAACwB,OAAZ,GAAsB,CACpB,YADoB,EAEpB,gBAFoB,EAGpB,UAHoB,EAIpB,YAJoB,CAAtB","sourcesContent":["import { forEach } from 'min-dash';\n\nimport { containsDi } from 'dmn-js-shared/lib/util/DiUtil';\nimport { is } from 'dmn-js-shared/lib/util/ModelUtil';\n\n\n/**\n * Generates missing DI on import.\n *\n * @param {DrdFactory} drdFactory\n * @param {ElementFactory} elementFactory\n * @param {EventBus} eventBus\n */\nexport default function DiGenerator(drdFactory, elementFactory, eventBus, drdUpdater) {\n  function createDi(definitions) {\n\n    // retrieve or create dmnDI\n    var dmnDI = definitions.dmnDI;\n\n    if (!dmnDI) {\n      dmnDI = drdFactory.create('dmndi:DMNDI');\n      definitions.set('dmnDI', dmnDI);\n    }\n\n    var diagram = drdFactory.create('dmndi:DMNDiagram');\n\n    dmnDI.set('diagrams', [ diagram ]);\n\n    var index = 0;\n\n    forEach(definitions.get('drgElement'), function(drgElement) {\n\n      // generate DI for decisions only\n      if (!is(drgElement, 'dmn:Decision')) {\n        return;\n      }\n\n\n      var dimensions = elementFactory._getDefaultSize(drgElement);\n\n      var di = drdFactory.createDiShape(drgElement, {\n        x: 150 + (index * 30),\n        y: 150 + (index * 30),\n        width: dimensions.width,\n        height: dimensions.height\n      });\n\n      drdUpdater.updateDiParent(di, diagram);\n\n      index++;\n    });\n  }\n\n  eventBus.on('import.start', ({ definitions }) => {\n    if (!containsDi(definitions)) {\n      createDi(definitions);\n    }\n  });\n}\n\nDiGenerator.$inject = [\n  'drdFactory',\n  'elementFactory',\n  'eventBus',\n  'drdUpdater'\n];"],"file":"DiGenerator.js"}