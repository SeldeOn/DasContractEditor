{"version":3,"sources":["../../src/import/DrdTreeWalker.js"],"names":["forEach","Refs","is","diRefs","name","enumerable","configurable","DRDTreeWalker","handler","options","deferred","visit","element","gfx","Error","id","visitRoot","root","visitIfDi","di","e","logError","message","error","handleDefinitions","definitions","diagram","dmnDI","diagrams","indexOf","length","handleDiagram","handleDrgElements","get","handleArtifacts","handleDeferred","elements","handleRequirements","handleAssociation","defer","requirements","requirement","diagramElements","handleDiagramElement","diagramElement","registerDi","dmnElement","dmnElementRef","bind","fn","push","d","context"],"mappings":"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","sourcesContent":["import {\n  forEach\n} from 'min-dash';\n\nimport Refs from 'object-refs';\n\nimport { is } from 'dmn-js-shared/lib/util/ModelUtil';\n\n\nvar diRefs = new Refs(\n  { name: 'dmnElementRef', enumerable: true },\n  { name: 'di', configurable: true }\n);\n\nexport default function DRDTreeWalker(handler, options) {\n\n  // list of elements to handle deferred to ensure\n  // prerequisites are drawn\n  var deferred = [];\n\n  function visit(element) {\n\n    var gfx = element.gfx;\n\n    // avoid multiple rendering of elements\n    if (gfx) {\n      throw new Error('already rendered ' + element.id);\n    }\n\n    // call handler\n    return handler.element(element);\n  }\n\n  function visitRoot(element) {\n    return handler.root(element);\n  }\n\n  function visitIfDi(element) {\n\n    try {\n      var gfx = element.di && visit(element);\n\n      return gfx;\n    } catch (e) {\n      logError(e.message, { element: element, error: e });\n    }\n  }\n\n\n  // Semantic handling //////////////////////\n\n  /**\n   * Handle definitions and return the rendered diagram (if any)\n   *\n   * @param {ModdleElement} definitions to walk and import\n   * @param {ModdleElement} [diagram] specific diagram to import and display\n   *\n   * @throws {Error} if no diagram to display could be found\n   */\n  function handleDefinitions(definitions, diagram) {\n\n    // make sure we walk the correct dmnElement\n    var dmnDI = definitions.dmnDI;\n\n    if (!dmnDI) {\n      throw new Error('no dmndi:DMNDI');\n    }\n\n    var diagrams = dmnDI.diagrams || [];\n\n    if (diagram && diagrams.indexOf(diagram) === -1) {\n      throw new Error('diagram not part of dmndi:DMNDI');\n    }\n\n    if (!diagram && diagrams && diagrams.length) {\n      diagram = diagrams[0];\n    }\n\n    // no diagram -> nothing to import\n    if (!diagram) {\n      throw new Error('no diagram to display');\n    }\n\n    // assign current diagram to definitions so that it can accessed later\n    definitions.di = diagram;\n\n    // load DI from selected diagram only\n    handleDiagram(diagram);\n\n    visitRoot(definitions);\n\n    handleDrgElements(definitions.get('drgElement'));\n    handleArtifacts(definitions.get('artifact'));\n\n    handleDeferred();\n  }\n\n  function handleDrgElements(elements) {\n    forEach(elements, function(element) {\n      visitIfDi(element);\n\n      handleRequirements(element);\n    });\n  }\n\n  function handleArtifacts(elements) {\n    forEach(elements, function(element) {\n      if (is(element, 'dmn:Association')) {\n        handleAssociation(element);\n      } else {\n        visitIfDi(element);\n      }\n    });\n  }\n\n  /**\n   * Defer association visit until all shapes are visited.\n   *\n   * @param {ModdleElement} element\n   */\n  function handleAssociation(element) {\n    defer(function() {\n      visitIfDi(element);\n    });\n  }\n\n  /**\n   * Defer requirements visiting until all shapes are visited.\n   *\n   * @param {ModdleElement} element\n   */\n  function handleRequirements(element) {\n    forEach([\n      'informationRequirement',\n      'knowledgeRequirement',\n      'authorityRequirement'\n    ], function(requirements) {\n      forEach(element[requirements], function(requirement) {\n        defer(function() {\n          visitIfDi(requirement);\n        });\n      });\n    });\n  }\n\n  // DI handling //////////////////////\n  function handleDiagram(diagram) {\n    forEach(diagram.diagramElements, handleDiagramElement);\n  }\n\n  function handleDiagramElement(diagramElement) {\n    registerDi(diagramElement);\n  }\n\n  function registerDi(di) {\n    var dmnElement = di.dmnElementRef;\n\n    if (dmnElement) {\n      if (dmnElement.di) {\n        logError('multiple DI elements defined for element', { element: dmnElement });\n      } else {\n        diRefs.bind(dmnElement, 'di');\n        dmnElement.di = di;\n      }\n    } else {\n      logError('no DMN element referenced in element', { element: di });\n    }\n  }\n\n  function defer(fn) {\n    deferred.push(fn);\n  }\n\n  function handleDeferred() {\n    forEach(deferred, function(d) {\n      d();\n    });\n  }\n\n  function logError(message, context) {\n    handler.error(message, context);\n  }\n\n  // API //////////////////////\n\n  return {\n    handleDefinitions: handleDefinitions\n  };\n}\n"],"file":"DrdTreeWalker.js"}